crystal_doc_search_index_callback({"repository_name":"amqp-client","body":"[![Build Status](https://travis-ci.org/cloudamqp/amqp-client.cr.svg?branch=master)](https://travis-ci.org/cloudamqp/amqp-client.cr)\n\n# amqp-client\n\nAn AMQP 0-9-1 client for Crystal.\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n```yaml\ndependencies:\n  amqp-client:\n    github: cloudamqp/amqp-client.cr\n```\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"amqp-client\"\n\nAMQP::Client.start(\"amqp://guest:guest@localhost\") do |c|\n  c.channel do |ch|\n    q = ch.queue(\"my-queue\")\n    q.subscribe(no_ack: false) do |msg|\n      puts \"Received: #{msg.body_io.to_s}\"\n      ch.basic_ack(msg.delivery_tag)\n    end\n\n    # publish directly to a queue without confirm\n    q.publish \"msg\"\n\n    # publish directly to a queue, blocking while waiting for confirm\n    q.publish_confirm \"msg\"\n\n    # publish to any exchange/routing-key\n    ch.basic_publish \"msg\", exchange: \"amq.topic\", routing_key: \"a\"\n\n    # publish to any exchange/routing-key and wait for confirm\n    ch.basic_publish_confirm \"msg\", exchange: \"amq.topic\", routing_key: \"a\"\n\n    # This statement will block until a message has arrived\n    # The only way to \"escape\" the block is to unsubscribe\n    q.subscribe(tag: \"myconsumer\", block: true) do |msg|\n      q.unsubscribe(\"myconsumer\")\n    end\n\n    # Consume and ack, nack or reject msgs\n    ch.basic_consume(\"queue\", tag: \"consumer-tag\", no_ack: false, exclusive: false, block: false) do |msg|\n      case msg.body_io.to_s\n      when \"ack\"\n        ch.basic_ack(msg.delivery_tag)\n      when \"reject\"\n        ch.basic_reject(msg.delivery_tag, requeue: true)\n      when \"nack\"\n        ch.basic_nack(msg.delivery_tag, requeue: true, multiple: true)\n      end\n    end\n\n    ch.prefetch(count: 1000) # alias for basic_qos\n\n    name, message_count, consumer_count =\n      ch.queue_declare(name: \"myqueue\", passive: false, durable: true,\n                       exclusive: false, auto_delete: false,\n                       args = Arguments.new)\n    q = ch.queue # temporary queue that is deleted when the channel is closed\n    ch.queue_purge(\"myqueue\")\n    ch.queue_bind(\"myqueue\", \"amq.topic\", \"routing-key\")\n    ch.queue_unbind(\"myqueue\", \"amq.topic\", \"routing-key\")\n    msg = ch.basic_get(\"myqueue\", no_ack: true)\n    ch.basic_ack(msg.delivery_tag)\n    ch.queue_delete(\"myqueue\")\n    ch.exchange_declare(\"my-exchange\", type: \"topic\")\n    ch.exchange_delete(\"my-exchange\")\n  end\nend\n```\n\n## Contributing\n\n1. [Fork it](https://github.com/cloudamqp/amqp-client.cr/fork)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Carl Hörberg](https://github.com/carlhoerberg) - creator and maintainer\n- [Anders Bälter](https://github.com/baelter)\n","program":{"html_id":"amqp-client/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"amqp-client","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"amqp-client/AMQP","path":"AMQP.html","kind":"module","full_name":"AMQP","name":"AMQP","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/amqp-client/errors.cr","line_number":1,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/errors.cr#L1"}],"repository_name":"amqp-client","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"amqp-client/AMQP/Client","path":"AMQP/Client.html","kind":"class","full_name":"AMQP::Client","name":"Client","abstract":false,"superclass":{"html_id":"amqp-client/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"amqp-client/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"amqp-client/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/amqp-client.cr","line_number":8,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client.cr#L8"},{"filename":"src/amqp-client/channel.cr","line_number":7,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L7"},{"filename":"src/amqp-client/connection.cr","line_number":8,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/connection.cr#L8"},{"filename":"src/amqp-client/errors.cr","line_number":1,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/errors.cr#L1"},{"filename":"src/amqp-client/exchange.cr","line_number":3,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/exchange.cr#L3"},{"filename":"src/amqp-client/message.cr","line_number":4,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/message.cr#L4"},{"filename":"src/amqp-client/queue.cr","line_number":3,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/queue.cr#L3"},{"filename":"src/amqp-client/sync.cr","line_number":1,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/sync.cr#L1"},{"filename":"src/amqp-client/version.cr","line_number":1,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/version.cr#L1"},{"filename":"src/amqp-client/websocket_io.cr","line_number":3,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/websocket_io.cr#L3"}],"repository_name":"amqp-client","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"LOG","name":"LOG","value":"::Log.for(self)","doc":null,"summary":null},{"id":"SCHEME_PORT","name":"SCHEME_PORT","value":"{\"amqp\" => 5672, \"amqps\" => 5671, \"ws\" => 80, \"wss\" => 443, \"http\" => 80, \"https\" => 443}","doc":null,"summary":null},{"id":"TLS_SCHEMES","name":"TLS_SCHEMES","value":"[\"amqps\", \"wss\", \"https\"] of ::String","doc":null,"summary":null},{"id":"VERSION","name":"VERSION","value":"{{ (`shards version`).stringify }}","doc":null,"summary":null},{"id":"WS_SCHEMES","name":"WS_SCHEMES","value":"[\"ws\", \"wss\", \"http\", \"https\"] of ::String","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"amqp-client/AMQP","kind":"module","full_name":"AMQP","name":"AMQP"},"doc":null,"summary":null,"class_methods":[{"html_id":"start(url:String|URI,&blk:AMQP::Client::Connection->_)-class-method","name":"start","doc":null,"summary":null,"abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String | URI"}],"args_string":"(url : String | URI, &blk : AMQP::Client::Connection -> _)","args_html":"(url : String | URI, &blk : <a href=\"../AMQP/Client/Connection.html\">AMQP::Client::Connection</a> -> _)","location":{"filename":"src/amqp-client.cr","line_number":11,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client.cr#L11"},"def":{"name":"start","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String | URI"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"blk","doc":null,"default_value":"","external_name":"blk","restriction":"(AMQP::Client::Connection -> _)"},"return_type":"","visibility":"Public","body":"begin\n  conn = (self.new(url)).connect\n  yield conn\nensure\n  conn.try(&.close)\nend"}},{"html_id":"start(host=\"localhost\",port=5672,vhost=\"/\",user=\"guest\",password=\"guest\",tls=false,websocket=false,channel_max=1024_u16,frame_max=131072_u32,heartbeat=0_u16,verify_mode=OpenSSL::SSL::VerifyMode::PEER,name=nil,&blk:AMQP::Client::Connection->_)-class-method","name":"start","doc":null,"summary":null,"abstract":false,"args":[{"name":"host","doc":null,"default_value":"\"localhost\"","external_name":"host","restriction":""},{"name":"port","doc":null,"default_value":"5672","external_name":"port","restriction":""},{"name":"vhost","doc":null,"default_value":"\"/\"","external_name":"vhost","restriction":""},{"name":"user","doc":null,"default_value":"\"guest\"","external_name":"user","restriction":""},{"name":"password","doc":null,"default_value":"\"guest\"","external_name":"password","restriction":""},{"name":"tls","doc":null,"default_value":"false","external_name":"tls","restriction":""},{"name":"websocket","doc":null,"default_value":"false","external_name":"websocket","restriction":""},{"name":"channel_max","doc":null,"default_value":"1024_u16","external_name":"channel_max","restriction":""},{"name":"frame_max","doc":null,"default_value":"131072_u32","external_name":"frame_max","restriction":""},{"name":"heartbeat","doc":null,"default_value":"0_u16","external_name":"heartbeat","restriction":""},{"name":"verify_mode","doc":null,"default_value":"OpenSSL::SSL::VerifyMode::PEER","external_name":"verify_mode","restriction":""},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(host = \"localhost\", port = 5672, vhost = \"/\", user = \"guest\", password = \"guest\", tls = false, websocket = false, channel_max = 1024_u16, frame_max = 131072_u32, heartbeat = 0_u16, verify_mode = OpenSSL::SSL::VerifyMode::PEER, name = nil, &blk : AMQP::Client::Connection -> _)","args_html":"(host = <span class=\"s\">&quot;localhost&quot;</span>, port = <span class=\"n\">5672</span>, vhost = <span class=\"s\">&quot;/&quot;</span>, user = <span class=\"s\">&quot;guest&quot;</span>, password = <span class=\"s\">&quot;guest&quot;</span>, tls = <span class=\"n\">false</span>, websocket = <span class=\"n\">false</span>, channel_max = <span class=\"n\">1024_u16</span>, frame_max = <span class=\"n\">131072_u32</span>, heartbeat = <span class=\"n\">0_u16</span>, verify_mode = <span class=\"t\">OpenSSL</span><span class=\"t\">::</span><span class=\"t\">SSL</span><span class=\"t\">::</span><span class=\"t\">VerifyMode</span><span class=\"t\">::</span><span class=\"t\">PEER</span>, name = <span class=\"n\">nil</span>, &blk : <a href=\"../AMQP/Client/Connection.html\">AMQP::Client::Connection</a> -> _)","location":{"filename":"src/amqp-client.cr","line_number":18,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client.cr#L18"},"def":{"name":"start","args":[{"name":"host","doc":null,"default_value":"\"localhost\"","external_name":"host","restriction":""},{"name":"port","doc":null,"default_value":"5672","external_name":"port","restriction":""},{"name":"vhost","doc":null,"default_value":"\"/\"","external_name":"vhost","restriction":""},{"name":"user","doc":null,"default_value":"\"guest\"","external_name":"user","restriction":""},{"name":"password","doc":null,"default_value":"\"guest\"","external_name":"password","restriction":""},{"name":"tls","doc":null,"default_value":"false","external_name":"tls","restriction":""},{"name":"websocket","doc":null,"default_value":"false","external_name":"websocket","restriction":""},{"name":"channel_max","doc":null,"default_value":"1024_u16","external_name":"channel_max","restriction":""},{"name":"frame_max","doc":null,"default_value":"131072_u32","external_name":"frame_max","restriction":""},{"name":"heartbeat","doc":null,"default_value":"0_u16","external_name":"heartbeat","restriction":""},{"name":"verify_mode","doc":null,"default_value":"OpenSSL::SSL::VerifyMode::PEER","external_name":"verify_mode","restriction":""},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"blk","doc":null,"default_value":"","external_name":"blk","restriction":"(AMQP::Client::Connection -> _)"},"return_type":"","visibility":"Public","body":"begin\n  conn = (self.new(host, port, vhost, user, password, tls, websocket, channel_max, frame_max, heartbeat, verify_mode, name)).connect\n  yield conn\nensure\n  conn.try(&.close)\nend"}}],"constructors":[{"html_id":"new(url:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String)","args_html":"(url : String)","location":{"filename":"src/amqp-client.cr","line_number":28,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client.cr#L28"},"def":{"name":"new","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"uri = URI.parse(url)\nself.new(uri)\n"}},{"html_id":"new(uri:URI)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":"URI"}],"args_string":"(uri : URI)","args_html":"(uri : URI)","location":{"filename":"src/amqp-client.cr","line_number":37,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client.cr#L37"},"def":{"name":"new","args":[{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":"URI"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"tls = TLS_SCHEMES.includes?(uri.scheme)\nwebsocket = WS_SCHEMES.includes?(uri.scheme)\nhost = uri.host.to_s.empty? ? \"localhost\" : uri.host.to_s\nport = uri.port || SCHEME_PORT[uri.scheme]\nvhost = if (path = uri.path) && path.bytesize > 1\n  URI.decode_www_form(path[1..-1])\nelse\n  \"/\"\nend\nuser = uri.user || \"guest\"\npassword = uri.password || \"guest\"\narguments = uri.query_params\nLOG.debug do\n  \"Opening connection to #{host} with arguments #{arguments}\"\nend\nheartbeat = (arguments.fetch(\"heartbeat\", 0)).to_u16\nframe_max = (arguments.fetch(\"frame_max\", 131072)).to_u32\nchannel_max = (arguments.fetch(\"channel_max\", 1024)).to_u16\nverify_mode = case (arguments.fetch(\"verify\", \"\")).downcase\nwhen \"none\"\n  OpenSSL::SSL::VerifyMode::NONE\nelse\n  OpenSSL::SSL::VerifyMode::PEER\nend\nname = (arguments.fetch(\"name\", nil)).try do |n|\n  URI.decode_www_form(n)\nend\ntcp_nodelay = arguments.has_key?(\"tcp_nodelay\")\nka_args = (arguments.fetch(\"tcp_keepalive\", \"60:10:3\")).split(\":\", 3)\ntcp_keepalive = {idle: ka_args[0].to_i, interval: ka_args[1].to_i, count: ka_args[2].to_i}\nself.new(host, port, vhost, user, password, tls, websocket, channel_max, frame_max, heartbeat, verify_mode, name, tcp_nodelay, tcp_keepalive)\n"}},{"html_id":"new(host=\"localhost\",port=5672,vhost=\"/\",user=\"guest\",password=\"guest\",tls=false,websocket=false,channel_max=1024_u16,frame_max=131072_u32,heartbeat=0_u16,verify_mode=OpenSSL::SSL::VerifyMode::PEER,name:String?=File.basename(PROGRAM_NAME),tcp_nodelay=false,tcp_keepalive={idle:60,interval:10,count:3})-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"host","doc":null,"default_value":"\"localhost\"","external_name":"host","restriction":""},{"name":"port","doc":null,"default_value":"5672","external_name":"port","restriction":""},{"name":"vhost","doc":null,"default_value":"\"/\"","external_name":"vhost","restriction":""},{"name":"user","doc":null,"default_value":"\"guest\"","external_name":"user","restriction":""},{"name":"password","doc":null,"default_value":"\"guest\"","external_name":"password","restriction":""},{"name":"tls","doc":null,"default_value":"false","external_name":"tls","restriction":""},{"name":"websocket","doc":null,"default_value":"false","external_name":"websocket","restriction":""},{"name":"channel_max","doc":null,"default_value":"1024_u16","external_name":"channel_max","restriction":""},{"name":"frame_max","doc":null,"default_value":"131072_u32","external_name":"frame_max","restriction":""},{"name":"heartbeat","doc":null,"default_value":"0_u16","external_name":"heartbeat","restriction":""},{"name":"verify_mode","doc":null,"default_value":"OpenSSL::SSL::VerifyMode::PEER","external_name":"verify_mode","restriction":""},{"name":"name","doc":null,"default_value":"File.basename(PROGRAM_NAME)","external_name":"name","restriction":"String | ::Nil"},{"name":"tcp_nodelay","doc":null,"default_value":"false","external_name":"tcp_nodelay","restriction":""},{"name":"tcp_keepalive","doc":null,"default_value":"{idle: 60, interval: 10, count: 3}","external_name":"tcp_keepalive","restriction":""}],"args_string":"(host = \"localhost\", port = 5672, vhost = \"/\", user = \"guest\", password = \"guest\", tls = false, websocket = false, channel_max = 1024_u16, frame_max = 131072_u32, heartbeat = 0_u16, verify_mode = OpenSSL::SSL::VerifyMode::PEER, name : String? = File.basename(PROGRAM_NAME), tcp_nodelay = false, tcp_keepalive = {idle: 60, interval: 10, count: 3})","args_html":"(host = <span class=\"s\">&quot;localhost&quot;</span>, port = <span class=\"n\">5672</span>, vhost = <span class=\"s\">&quot;/&quot;</span>, user = <span class=\"s\">&quot;guest&quot;</span>, password = <span class=\"s\">&quot;guest&quot;</span>, tls = <span class=\"n\">false</span>, websocket = <span class=\"n\">false</span>, channel_max = <span class=\"n\">1024_u16</span>, frame_max = <span class=\"n\">131072_u32</span>, heartbeat = <span class=\"n\">0_u16</span>, verify_mode = <span class=\"t\">OpenSSL</span><span class=\"t\">::</span><span class=\"t\">SSL</span><span class=\"t\">::</span><span class=\"t\">VerifyMode</span><span class=\"t\">::</span><span class=\"t\">PEER</span>, name : String? = <span class=\"t\">File</span>.basename(<span class=\"t\">PROGRAM_NAME</span>), tcp_nodelay = <span class=\"n\">false</span>, tcp_keepalive = {idle: <span class=\"n\">60</span>, interval: <span class=\"n\">10</span>, count: <span class=\"n\">3</span>})","location":{"filename":"src/amqp-client.cr","line_number":70,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client.cr#L70"},"def":{"name":"new","args":[{"name":"host","doc":null,"default_value":"\"localhost\"","external_name":"host","restriction":""},{"name":"port","doc":null,"default_value":"5672","external_name":"port","restriction":""},{"name":"vhost","doc":null,"default_value":"\"/\"","external_name":"vhost","restriction":""},{"name":"user","doc":null,"default_value":"\"guest\"","external_name":"user","restriction":""},{"name":"password","doc":null,"default_value":"\"guest\"","external_name":"password","restriction":""},{"name":"tls","doc":null,"default_value":"false","external_name":"tls","restriction":""},{"name":"websocket","doc":null,"default_value":"false","external_name":"websocket","restriction":""},{"name":"channel_max","doc":null,"default_value":"1024_u16","external_name":"channel_max","restriction":""},{"name":"frame_max","doc":null,"default_value":"131072_u32","external_name":"frame_max","restriction":""},{"name":"heartbeat","doc":null,"default_value":"0_u16","external_name":"heartbeat","restriction":""},{"name":"verify_mode","doc":null,"default_value":"OpenSSL::SSL::VerifyMode::PEER","external_name":"verify_mode","restriction":""},{"name":"name","doc":null,"default_value":"File.basename(PROGRAM_NAME)","external_name":"name","restriction":"String | ::Nil"},{"name":"tcp_nodelay","doc":null,"default_value":"false","external_name":"tcp_nodelay","restriction":""},{"name":"tcp_keepalive","doc":null,"default_value":"{idle: 60, interval: 10, count: 3}","external_name":"tcp_keepalive","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(host, port, vhost, user, password, tls, websocket, channel_max, frame_max, heartbeat, verify_mode, name, tcp_nodelay, tcp_keepalive)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"connect:Connection-instance-method","name":"connect","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Connection","args_html":" : <a href=\"../AMQP/Client/Connection.html\">Connection</a>","location":{"filename":"src/amqp-client.cr","line_number":76,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client.cr#L76"},"def":{"name":"connect","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Connection","visibility":"Public","body":"begin\n  if @host.starts_with?('/')\n    socket = connect_unix\n    Connection.start(socket, @user, @password, @vhost, @channel_max, @frame_max, @heartbeat, @name)\n  else\n    if @websocket\n      websocket = ::HTTP::WebSocket.new(@host, path: \"\", port: @port, tls: @tls)\n      io = WebSocketIO.new(websocket)\n      Connection.start(io, @user, @password, @vhost, @channel_max, @frame_max, @heartbeat, @name)\n    else\n      if @tls\n        socket = connect_tls(connect_tcp)\n        Connection.start(socket, @user, @password, @vhost, @channel_max, @frame_max, @heartbeat, @name)\n      else\n        socket = connect_tcp\n        Connection.start(socket, @user, @password, @vhost, @channel_max, @frame_max, @heartbeat, @name)\n      end\n    end\n  end\nrescue ex\n  if ex.is_a?(Error)\n    raise(ex)\n  end\n  raise(Error.new(ex.message, cause: ex))\nend"}},{"html_id":"host:String-instance-method","name":"host","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/amqp-client.cr","line_number":68,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client.cr#L68"},"def":{"name":"host","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@host"}},{"html_id":"port:Int32-instance-method","name":"port","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/amqp-client.cr","line_number":68,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client.cr#L68"},"def":{"name":"port","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@port"}},{"html_id":"tls:Bool-instance-method","name":"tls","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/amqp-client.cr","line_number":68,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client.cr#L68"},"def":{"name":"tls","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@tls"}},{"html_id":"user:String-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/amqp-client.cr","line_number":68,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client.cr#L68"},"def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user"}},{"html_id":"vhost:String-instance-method","name":"vhost","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/amqp-client.cr","line_number":68,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client.cr#L68"},"def":{"name":"vhost","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@vhost"}},{"html_id":"websocket:Bool-instance-method","name":"websocket","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/amqp-client.cr","line_number":68,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client.cr#L68"},"def":{"name":"websocket","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@websocket"}}],"macros":[],"types":[{"html_id":"amqp-client/AMQP/Client/Arguments","path":"AMQP/Client/Arguments.html","kind":"alias","full_name":"AMQP::Client::Arguments","name":"Arguments","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/amqp-client.cr","line_number":130,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client.cr#L130"}],"repository_name":"amqp-client","program":false,"enum":false,"alias":true,"aliased":"AMQ::Protocol::Table","aliased_html":"AMQ::Protocol::Table","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"amqp-client/AMQP/Client","kind":"class","full_name":"AMQP::Client","name":"Client"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"amqp-client/AMQP/Client/BaseMessage","path":"AMQP/Client/BaseMessage.html","kind":"struct","full_name":"AMQP::Client::BaseMessage","name":"BaseMessage","abstract":true,"superclass":{"html_id":"amqp-client/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"amqp-client/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"amqp-client/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"amqp-client/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/amqp-client/message.cr","line_number":5,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/message.cr#L5"}],"repository_name":"amqp-client","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"amqp-client/AMQP/Client/Message","kind":"struct","full_name":"AMQP::Client::Message","name":"Message"},{"html_id":"amqp-client/AMQP/Client/ReturnedMessage","kind":"struct","full_name":"AMQP::Client::ReturnedMessage","name":"ReturnedMessage"}],"including_types":[],"namespace":{"html_id":"amqp-client/AMQP/Client","kind":"class","full_name":"AMQP::Client","name":"Client"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"html_id":"new(exchange:String,routing_key:String,properties:AMQ::Protocol::Properties,body_io:IO::Memory)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":"AMQ::Protocol::Properties"},{"name":"body_io","doc":null,"default_value":"","external_name":"body_io","restriction":"IO::Memory"}],"args_string":"(exchange : String, routing_key : String, properties : AMQ::Protocol::Properties, body_io : IO::Memory)","args_html":"(exchange : String, routing_key : String, properties : AMQ::Protocol::Properties, body_io : IO::Memory)","location":{"filename":"src/amqp-client/message.cr","line_number":8,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/message.cr#L8"},"def":{"name":"new","args":[{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":"AMQ::Protocol::Properties"},{"name":"body_io","doc":null,"default_value":"","external_name":"body_io","restriction":"IO::Memory"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(exchange, routing_key, properties, body_io)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"body_io:IO::Memory-instance-method","name":"body_io","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : IO::Memory","args_html":" : IO::Memory","location":{"filename":"src/amqp-client/message.cr","line_number":6,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/message.cr#L6"},"def":{"name":"body_io","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@body_io"}},{"html_id":"exchange:String-instance-method","name":"exchange","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/amqp-client/message.cr","line_number":6,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/message.cr#L6"},"def":{"name":"exchange","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@exchange"}},{"html_id":"properties:AMQ::Protocol::Properties-instance-method","name":"properties","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AMQ::Protocol::Properties","args_html":" : AMQ::Protocol::Properties","location":{"filename":"src/amqp-client/message.cr","line_number":6,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/message.cr#L6"},"def":{"name":"properties","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@properties"}},{"html_id":"routing_key:String-instance-method","name":"routing_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/amqp-client/message.cr","line_number":6,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/message.cr#L6"},"def":{"name":"routing_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@routing_key"}}],"macros":[],"types":[]},{"html_id":"amqp-client/AMQP/Client/Channel","path":"AMQP/Client/Channel.html","kind":"class","full_name":"AMQP::Client::Channel","name":"Channel","abstract":false,"superclass":{"html_id":"amqp-client/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"amqp-client/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"amqp-client/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/amqp-client/channel.cr","line_number":8,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L8"},{"filename":"src/amqp-client/errors.cr","line_number":27,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/errors.cr#L27"}],"repository_name":"amqp-client","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"LOG","name":"LOG","value":"AMQP::Client::Connection::LOG.for(self)","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"amqp-client/AMQP/Client","kind":"class","full_name":"AMQP::Client","name":"Client"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"html_id":"new(connection:Connection,id:UInt16)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"connection","doc":null,"default_value":"","external_name":"connection","restriction":"Connection"},{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt16"}],"args_string":"(connection : Connection, id : UInt16)","args_html":"(connection : <a href=\"../../AMQP/Client/Connection.html\">Connection</a>, id : UInt16)","location":{"filename":"src/amqp-client/channel.cr","line_number":22,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L22"},"def":{"name":"new","args":[{"name":"connection","doc":null,"default_value":"","external_name":"connection","restriction":"Connection"},{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"UInt16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(connection, id)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"basic_ack(delivery_tag:UInt64,multiple=false):Nil-instance-method","name":"basic_ack","doc":null,"summary":null,"abstract":false,"args":[{"name":"delivery_tag","doc":null,"default_value":"","external_name":"delivery_tag","restriction":"UInt64"},{"name":"multiple","doc":null,"default_value":"false","external_name":"multiple","restriction":""}],"args_string":"(delivery_tag : UInt64, multiple = false) : Nil","args_html":"(delivery_tag : UInt64, multiple = <span class=\"n\">false</span>) : Nil","location":{"filename":"src/amqp-client/channel.cr","line_number":344,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L344"},"def":{"name":"basic_ack","args":[{"name":"delivery_tag","doc":null,"default_value":"","external_name":"delivery_tag","restriction":"UInt64"},{"name":"multiple","doc":null,"default_value":"false","external_name":"multiple","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"write(Frame::Basic::Ack.new(@id, delivery_tag, multiple))"}},{"html_id":"basic_cancel(consumer_tag):Nil-instance-method","name":"basic_cancel","doc":null,"summary":null,"abstract":false,"args":[{"name":"consumer_tag","doc":null,"default_value":"","external_name":"consumer_tag","restriction":""}],"args_string":"(consumer_tag) : Nil","args_html":"(consumer_tag) : Nil","location":{"filename":"src/amqp-client/channel.cr","line_number":340,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L340"},"def":{"name":"basic_cancel","args":[{"name":"consumer_tag","doc":null,"default_value":"","external_name":"consumer_tag","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"write(Frame::Basic::Cancel.new(@id, consumer_tag, no_wait: false))"}},{"html_id":"basic_consume(queue,tag=\"\",no_ack=true,exclusive=false,block=false,args=Arguments.new,work_pool=1,&blk:DeliverMessage->Nil)-instance-method","name":"basic_consume","doc":null,"summary":null,"abstract":false,"args":[{"name":"queue","doc":null,"default_value":"","external_name":"queue","restriction":""},{"name":"tag","doc":null,"default_value":"\"\"","external_name":"tag","restriction":""},{"name":"no_ack","doc":null,"default_value":"true","external_name":"no_ack","restriction":""},{"name":"exclusive","doc":null,"default_value":"false","external_name":"exclusive","restriction":""},{"name":"block","doc":null,"default_value":"false","external_name":"block","restriction":""},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""},{"name":"work_pool","doc":null,"default_value":"1","external_name":"work_pool","restriction":""}],"args_string":"(queue, tag = \"\", no_ack = true, exclusive = false, block = false, args = Arguments.new, work_pool = 1, &blk : DeliverMessage -> Nil)","args_html":"(queue, tag = <span class=\"s\">&quot;&quot;</span>, no_ack = <span class=\"n\">true</span>, exclusive = <span class=\"n\">false</span>, block = <span class=\"n\">false</span>, args = <span class=\"t\">Arguments</span>.<span class=\"k\">new</span>, work_pool = <span class=\"n\">1</span>, &blk : <a href=\"../../AMQP/Client/DeliverMessage.html\">DeliverMessage</a> -> Nil)","location":{"filename":"src/amqp-client/channel.cr","line_number":317,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L317"},"def":{"name":"basic_consume","args":[{"name":"queue","doc":null,"default_value":"","external_name":"queue","restriction":""},{"name":"tag","doc":null,"default_value":"\"\"","external_name":"tag","restriction":""},{"name":"no_ack","doc":null,"default_value":"true","external_name":"no_ack","restriction":""},{"name":"exclusive","doc":null,"default_value":"false","external_name":"exclusive","restriction":""},{"name":"block","doc":null,"default_value":"false","external_name":"block","restriction":""},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""},{"name":"work_pool","doc":null,"default_value":"1","external_name":"work_pool","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"blk","doc":null,"default_value":"","external_name":"blk","restriction":"(DeliverMessage -> Nil)"},"return_type":"","visibility":"Public","body":"if work_pool > 1024\n  raise(ArgumentError.new(\"Max allowed work_pool is 1024\"))\nend\nwrite(Frame::Basic::Consume.new(@id, 0_u16, queue, tag, false, no_ack, exclusive, false, args))\nok = expect(Frame::Basic::ConsumeOk)\ndelivery_channel = ::Channel(DeliverMessage).new(8192)\n@consumers[ok.consumer_tag] = delivery_channel\nwork_pool.times do |i|\n  spawn(consume(ok.consumer_tag, delivery_channel, blk), same_thread: i.zero?, name: \"AMQPconsumer##{ok.consumer_tag} ##{i}\")\nend\nif block\n  cb = @consumer_blocks[ok.consumer_tag] = ::Channel(Exception).new\n  if ex = cb.receive?\n    write(Frame::Basic::Cancel.new(@id, ok.consumer_tag, no_wait: true))\n    raise(ex)\n  end\nend\nok.consumer_tag\n"}},{"html_id":"basic_get(queue:String,no_ack:Bool):GetMessage?-instance-method","name":"basic_get","doc":null,"summary":null,"abstract":false,"args":[{"name":"queue","doc":null,"default_value":"","external_name":"queue","restriction":"String"},{"name":"no_ack","doc":null,"default_value":"","external_name":"no_ack","restriction":"Bool"}],"args_string":"(queue : String, no_ack : Bool) : GetMessage?","args_html":"(queue : String, no_ack : Bool) : <a href=\"../../AMQP/Client/GetMessage.html\">GetMessage</a>?","location":{"filename":"src/amqp-client/channel.cr","line_number":305,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L305"},"def":{"name":"basic_get","args":[{"name":"queue","doc":null,"default_value":"","external_name":"queue","restriction":"String"},{"name":"no_ack","doc":null,"default_value":"","external_name":"no_ack","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"GetMessage | ::Nil","visibility":"Public","body":"write(Frame::Basic::Get.new(@id, 0_u16, queue, no_ack))\n@basic_get.receive\n"}},{"html_id":"basic_nack(delivery_tag:UInt64,requeue=false,multiple=false):Nil-instance-method","name":"basic_nack","doc":null,"summary":null,"abstract":false,"args":[{"name":"delivery_tag","doc":null,"default_value":"","external_name":"delivery_tag","restriction":"UInt64"},{"name":"requeue","doc":null,"default_value":"false","external_name":"requeue","restriction":""},{"name":"multiple","doc":null,"default_value":"false","external_name":"multiple","restriction":""}],"args_string":"(delivery_tag : UInt64, requeue = false, multiple = false) : Nil","args_html":"(delivery_tag : UInt64, requeue = <span class=\"n\">false</span>, multiple = <span class=\"n\">false</span>) : Nil","location":{"filename":"src/amqp-client/channel.cr","line_number":352,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L352"},"def":{"name":"basic_nack","args":[{"name":"delivery_tag","doc":null,"default_value":"","external_name":"delivery_tag","restriction":"UInt64"},{"name":"requeue","doc":null,"default_value":"false","external_name":"requeue","restriction":""},{"name":"multiple","doc":null,"default_value":"false","external_name":"multiple","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"write(Frame::Basic::Nack.new(@id, delivery_tag, multiple, requeue))"}},{"html_id":"basic_publish(bytes:Bytes,exchange,routing_key=\"\",mandatory=false,immediate=false,props=Properties.new)-instance-method","name":"basic_publish","doc":null,"summary":null,"abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":""},{"name":"routing_key","doc":null,"default_value":"\"\"","external_name":"routing_key","restriction":""},{"name":"mandatory","doc":null,"default_value":"false","external_name":"mandatory","restriction":""},{"name":"immediate","doc":null,"default_value":"false","external_name":"immediate","restriction":""},{"name":"props","doc":null,"default_value":"Properties.new","external_name":"props","restriction":""}],"args_string":"(bytes : Bytes, exchange, routing_key = \"\", mandatory = false, immediate = false, props = Properties.new)","args_html":"(bytes : Bytes, exchange, routing_key = <span class=\"s\">&quot;&quot;</span>, mandatory = <span class=\"n\">false</span>, immediate = <span class=\"n\">false</span>, props = <span class=\"t\">Properties</span>.<span class=\"k\">new</span>)","location":{"filename":"src/amqp-client/channel.cr","line_number":214,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L214"},"def":{"name":"basic_publish","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":""},{"name":"routing_key","doc":null,"default_value":"\"\"","external_name":"routing_key","restriction":""},{"name":"mandatory","doc":null,"default_value":"false","external_name":"mandatory","restriction":""},{"name":"immediate","doc":null,"default_value":"false","external_name":"immediate","restriction":""},{"name":"props","doc":null,"default_value":"Properties.new","external_name":"props","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"basic_publish(bytes, bytes.size, exchange, routing_key, mandatory, immediate, props)"}},{"html_id":"basic_publish(str:String,exchange,routing_key=\"\",mandatory=false,immediate=false,props=Properties.new)-instance-method","name":"basic_publish","doc":null,"summary":null,"abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"},{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":""},{"name":"routing_key","doc":null,"default_value":"\"\"","external_name":"routing_key","restriction":""},{"name":"mandatory","doc":null,"default_value":"false","external_name":"mandatory","restriction":""},{"name":"immediate","doc":null,"default_value":"false","external_name":"immediate","restriction":""},{"name":"props","doc":null,"default_value":"Properties.new","external_name":"props","restriction":""}],"args_string":"(str : String, exchange, routing_key = \"\", mandatory = false, immediate = false, props = Properties.new)","args_html":"(str : String, exchange, routing_key = <span class=\"s\">&quot;&quot;</span>, mandatory = <span class=\"n\">false</span>, immediate = <span class=\"n\">false</span>, props = <span class=\"t\">Properties</span>.<span class=\"k\">new</span>)","location":{"filename":"src/amqp-client/channel.cr","line_number":218,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L218"},"def":{"name":"basic_publish","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"},{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":""},{"name":"routing_key","doc":null,"default_value":"\"\"","external_name":"routing_key","restriction":""},{"name":"mandatory","doc":null,"default_value":"false","external_name":"mandatory","restriction":""},{"name":"immediate","doc":null,"default_value":"false","external_name":"immediate","restriction":""},{"name":"props","doc":null,"default_value":"Properties.new","external_name":"props","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"basic_publish(str.to_slice, exchange, routing_key, mandatory, immediate, props)"}},{"html_id":"basic_publish(io:IO::Memory|IO::FileDescriptor,exchange,routing_key=\"\",mandatory=false,immediate=false,props=Properties.new)-instance-method","name":"basic_publish","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO::Memory | IO::FileDescriptor"},{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":""},{"name":"routing_key","doc":null,"default_value":"\"\"","external_name":"routing_key","restriction":""},{"name":"mandatory","doc":null,"default_value":"false","external_name":"mandatory","restriction":""},{"name":"immediate","doc":null,"default_value":"false","external_name":"immediate","restriction":""},{"name":"props","doc":null,"default_value":"Properties.new","external_name":"props","restriction":""}],"args_string":"(io : IO::Memory | IO::FileDescriptor, exchange, routing_key = \"\", mandatory = false, immediate = false, props = Properties.new)","args_html":"(io : IO::Memory | IO::FileDescriptor, exchange, routing_key = <span class=\"s\">&quot;&quot;</span>, mandatory = <span class=\"n\">false</span>, immediate = <span class=\"n\">false</span>, props = <span class=\"t\">Properties</span>.<span class=\"k\">new</span>)","location":{"filename":"src/amqp-client/channel.cr","line_number":222,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L222"},"def":{"name":"basic_publish","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO::Memory | IO::FileDescriptor"},{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":""},{"name":"routing_key","doc":null,"default_value":"\"\"","external_name":"routing_key","restriction":""},{"name":"mandatory","doc":null,"default_value":"false","external_name":"mandatory","restriction":""},{"name":"immediate","doc":null,"default_value":"false","external_name":"immediate","restriction":""},{"name":"props","doc":null,"default_value":"Properties.new","external_name":"props","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"basic_publish(io, io.bytesize, exchange, routing_key, mandatory, immediate, props)"}},{"html_id":"basic_publish(body:IO|Bytes,bytesize:Int,exchange:String,routing_key=\"\",mandatory=false,immediate=false,props=Properties.new):UInt64-instance-method","name":"basic_publish","doc":null,"summary":null,"abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"IO | Bytes"},{"name":"bytesize","doc":null,"default_value":"","external_name":"bytesize","restriction":"Int"},{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"\"\"","external_name":"routing_key","restriction":""},{"name":"mandatory","doc":null,"default_value":"false","external_name":"mandatory","restriction":""},{"name":"immediate","doc":null,"default_value":"false","external_name":"immediate","restriction":""},{"name":"props","doc":null,"default_value":"Properties.new","external_name":"props","restriction":""}],"args_string":"(body : IO | Bytes, bytesize : Int, exchange : String, routing_key = \"\", mandatory = false, immediate = false, props = Properties.new) : UInt64","args_html":"(body : IO | Bytes, bytesize : Int, exchange : String, routing_key = <span class=\"s\">&quot;&quot;</span>, mandatory = <span class=\"n\">false</span>, immediate = <span class=\"n\">false</span>, props = <span class=\"t\">Properties</span>.<span class=\"k\">new</span>) : UInt64","location":{"filename":"src/amqp-client/channel.cr","line_number":226,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L226"},"def":{"name":"basic_publish","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"IO | Bytes"},{"name":"bytesize","doc":null,"default_value":"","external_name":"bytesize","restriction":"Int"},{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"\"\"","external_name":"routing_key","restriction":""},{"name":"mandatory","doc":null,"default_value":"false","external_name":"mandatory","restriction":""},{"name":"immediate","doc":null,"default_value":"false","external_name":"immediate","restriction":""},{"name":"props","doc":null,"default_value":"Properties.new","external_name":"props","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"if @closing_frame\n  raise(ClosedException.new(@closing_frame))\nend\n@connection.with_lock do |c|\n  c.unsafe_write(Frame::Basic::Publish.new(@id, 0_u16, exchange, routing_key, mandatory, immediate))\n  c.unsafe_write(Frame::Header.new(@id, 60_u16, 0_u16, bytesize.to_u64, props))\n  pos = 0_u32\n  frame_max = @connection.frame_max\n  while !(pos == bytesize)\n    length = Math.min(frame_max, bytesize.to_u32 - pos)\n    case body\n    when Bytes\n      c.unsafe_write(Frame::BytesBody.new(@id, length, body[pos.to_i32, length.to_i32]))\n    when IO\n      c.unsafe_write(Frame::Body.new(@id, length, body))\n    end\n    pos = pos + length\n  end\nend\nif @confirm_mode\n  @confirm_id = @confirm_id &+ 1_u64\nelse\n  0_u64\nend\n"}},{"html_id":"basic_publish_confirm(io:IO,bytesize:Int,exchange:String,routing_key=\"\",mandatory=false,immediate=false,props=Properties.new):Bool-instance-method","name":"basic_publish_confirm","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"bytesize","doc":null,"default_value":"","external_name":"bytesize","restriction":"Int"},{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"\"\"","external_name":"routing_key","restriction":""},{"name":"mandatory","doc":null,"default_value":"false","external_name":"mandatory","restriction":""},{"name":"immediate","doc":null,"default_value":"false","external_name":"immediate","restriction":""},{"name":"props","doc":null,"default_value":"Properties.new","external_name":"props","restriction":""}],"args_string":"(io : IO, bytesize : Int, exchange : String, routing_key = \"\", mandatory = false, immediate = false, props = Properties.new) : Bool","args_html":"(io : IO, bytesize : Int, exchange : String, routing_key = <span class=\"s\">&quot;&quot;</span>, mandatory = <span class=\"n\">false</span>, immediate = <span class=\"n\">false</span>, props = <span class=\"t\">Properties</span>.<span class=\"k\">new</span>) : Bool","location":{"filename":"src/amqp-client/channel.cr","line_number":259,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L259"},"def":{"name":"basic_publish_confirm","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"bytesize","doc":null,"default_value":"","external_name":"bytesize","restriction":"Int"},{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"\"\"","external_name":"routing_key","restriction":""},{"name":"mandatory","doc":null,"default_value":"false","external_name":"mandatory","restriction":""},{"name":"immediate","doc":null,"default_value":"false","external_name":"immediate","restriction":""},{"name":"props","doc":null,"default_value":"Properties.new","external_name":"props","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"confirm_select\nmsgid = basic_publish(io, bytesize, exchange, routing_key, mandatory, immediate, props)\nwait_for_confirm(msgid)\n"}},{"html_id":"basic_publish_confirm(msg,exchange,routing_key=\"\",mandatory=false,immediate=false,props=Properties.new):Bool-instance-method","name":"basic_publish_confirm","doc":null,"summary":null,"abstract":false,"args":[{"name":"msg","doc":null,"default_value":"","external_name":"msg","restriction":""},{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":""},{"name":"routing_key","doc":null,"default_value":"\"\"","external_name":"routing_key","restriction":""},{"name":"mandatory","doc":null,"default_value":"false","external_name":"mandatory","restriction":""},{"name":"immediate","doc":null,"default_value":"false","external_name":"immediate","restriction":""},{"name":"props","doc":null,"default_value":"Properties.new","external_name":"props","restriction":""}],"args_string":"(msg, exchange, routing_key = \"\", mandatory = false, immediate = false, props = Properties.new) : Bool","args_html":"(msg, exchange, routing_key = <span class=\"s\">&quot;&quot;</span>, mandatory = <span class=\"n\">false</span>, immediate = <span class=\"n\">false</span>, props = <span class=\"t\">Properties</span>.<span class=\"k\">new</span>) : Bool","location":{"filename":"src/amqp-client/channel.cr","line_number":253,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L253"},"def":{"name":"basic_publish_confirm","args":[{"name":"msg","doc":null,"default_value":"","external_name":"msg","restriction":""},{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":""},{"name":"routing_key","doc":null,"default_value":"\"\"","external_name":"routing_key","restriction":""},{"name":"mandatory","doc":null,"default_value":"false","external_name":"mandatory","restriction":""},{"name":"immediate","doc":null,"default_value":"false","external_name":"immediate","restriction":""},{"name":"props","doc":null,"default_value":"Properties.new","external_name":"props","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"confirm_select\nmsgid = basic_publish(msg, exchange, routing_key, mandatory, immediate, props)\nwait_for_confirm(msgid)\n"}},{"html_id":"basic_qos(count,global=false):Nil-instance-method","name":"basic_qos","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":""},{"name":"global","doc":null,"default_value":"false","external_name":"global","restriction":""}],"args_string":"(count, global = false) : Nil","args_html":"(count, global = <span class=\"n\">false</span>) : Nil","location":{"filename":"src/amqp-client/channel.cr","line_number":356,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L356"},"def":{"name":"basic_qos","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":""},{"name":"global","doc":null,"default_value":"false","external_name":"global","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"write(Frame::Basic::Qos.new(@id, 0_u32, count.to_u16, global))\nexpect(Frame::Basic::QosOk)\n"}},{"html_id":"basic_recover(requeue):Nil-instance-method","name":"basic_recover","doc":null,"summary":null,"abstract":false,"args":[{"name":"requeue","doc":null,"default_value":"","external_name":"requeue","restriction":""}],"args_string":"(requeue) : Nil","args_html":"(requeue) : Nil","location":{"filename":"src/amqp-client/channel.cr","line_number":474,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L474"},"def":{"name":"basic_recover","args":[{"name":"requeue","doc":null,"default_value":"","external_name":"requeue","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"write(Frame::Basic::Recover.new(@id, requeue))\nexpect(Frame::Basic::RecoverOk)\n"}},{"html_id":"basic_reject(delivery_tag:UInt64,requeue=false):Nil-instance-method","name":"basic_reject","doc":null,"summary":null,"abstract":false,"args":[{"name":"delivery_tag","doc":null,"default_value":"","external_name":"delivery_tag","restriction":"UInt64"},{"name":"requeue","doc":null,"default_value":"false","external_name":"requeue","restriction":""}],"args_string":"(delivery_tag : UInt64, requeue = false) : Nil","args_html":"(delivery_tag : UInt64, requeue = <span class=\"n\">false</span>) : Nil","location":{"filename":"src/amqp-client/channel.cr","line_number":348,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L348"},"def":{"name":"basic_reject","args":[{"name":"delivery_tag","doc":null,"default_value":"","external_name":"delivery_tag","restriction":"UInt64"},{"name":"requeue","doc":null,"default_value":"false","external_name":"requeue","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"write(Frame::Basic::Reject.new(@id, delivery_tag, requeue))"}},{"html_id":"cleanup-instance-method","name":"cleanup","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/amqp-client/channel.cr","line_number":71,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L71"},"def":{"name":"cleanup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@closed = true\n@reply_frames.close\n@basic_get.close\n@on_confirm.each_value(&.call(false))\n@on_confirm.clear\n@consumer_blocks.each_value(&.close)\n@consumer_blocks.clear\n@consumers.each_value(&.close)\n@consumers.clear\n"}},{"html_id":"close(frame:Frame::Channel::Close):Nil-instance-method","name":"close","doc":null,"summary":null,"abstract":false,"args":[{"name":"frame","doc":null,"default_value":"","external_name":"frame","restriction":"Frame::Channel::Close"}],"args_string":"(frame : Frame::Channel::Close) : Nil","args_html":"(frame : Frame::Channel::Close) : Nil","location":{"filename":"src/amqp-client/channel.cr","line_number":45,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L45"},"def":{"name":"close","args":[{"name":"frame","doc":null,"default_value":"","external_name":"frame","restriction":"Frame::Channel::Close"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"begin\n  write(Frame::Channel::CloseOk.new(@id))\nrescue ex\n  LOG.error(exception: ex) do\n    \"Couldn't write CloseOk frame\"\n  end\nend\n@closed = true\n@closing_frame = frame\nif @on_close\nelse\n  LOG.info do\n    \"Channel closed by server: #{frame.inspect}\"\n  end\nend\nbegin\n  @on_close.try(&.call(frame.reply_code, frame.reply_text))\nrescue ex\n  LOG.error(exception: ex) do\n    \"Uncaught exception in on_close block\"\n  end\nend\ncleanup\n"}},{"html_id":"close:Nil-instance-method","name":"close","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Nil","args_html":" : Nil","location":{"filename":"src/amqp-client/channel.cr","line_number":37,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L37"},"def":{"name":"close","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if @closed\n  return\nend\n@closed = true\nwrite(Frame::Channel::Close.new(@id, 200, \"\", 0, 0))\nexpect(Frame::Channel::CloseOk)\ncleanup\n"}},{"html_id":"closed?:Bool-instance-method","name":"closed?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/amqp-client/channel.cr","line_number":67,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L67"},"def":{"name":"closed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@closed"}},{"html_id":"confirm_select(no_wait=false):Nil-instance-method","name":"confirm_select","doc":null,"summary":null,"abstract":false,"args":[{"name":"no_wait","doc":null,"default_value":"false","external_name":"no_wait","restriction":""}],"args_string":"(no_wait = false) : Nil","args_html":"(no_wait = <span class=\"n\">false</span>) : Nil","location":{"filename":"src/amqp-client/channel.cr","line_number":467,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L467"},"def":{"name":"confirm_select","args":[{"name":"no_wait","doc":null,"default_value":"false","external_name":"no_wait","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if @confirm_mode\n  return\nend\nwrite(Frame::Confirm::Select.new(@id, no_wait))\nif no_wait\nelse\n  expect(Frame::Confirm::SelectOk)\nend\n@confirm_mode = true\n"}},{"html_id":"default_exchange-instance-method","name":"default_exchange","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/amqp-client/channel.cr","line_number":431,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L431"},"def":{"name":"default_exchange","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Exchange.new(self, \"\")"}},{"html_id":"direct_exchange(name=\"amq.direct\",passive=true)-instance-method","name":"direct_exchange","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"\"amq.direct\"","external_name":"name","restriction":""},{"name":"passive","doc":null,"default_value":"true","external_name":"passive","restriction":""}],"args_string":"(name = \"amq.direct\", passive = true)","args_html":"(name = <span class=\"s\">&quot;amq.direct&quot;</span>, passive = <span class=\"n\">true</span>)","location":{"filename":"src/amqp-client/channel.cr","line_number":427,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L427"},"def":{"name":"direct_exchange","args":[{"name":"name","doc":null,"default_value":"\"amq.direct\"","external_name":"name","restriction":""},{"name":"passive","doc":null,"default_value":"true","external_name":"passive","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"exchange(name, \"direct\", passive)"}},{"html_id":"exchange(name,type,passive=false,durable=true,exclusive=false,internal=false,auto_delete=false,args=Arguments.new)-instance-method","name":"exchange","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"passive","doc":null,"default_value":"false","external_name":"passive","restriction":""},{"name":"durable","doc":null,"default_value":"true","external_name":"durable","restriction":""},{"name":"exclusive","doc":null,"default_value":"false","external_name":"exclusive","restriction":""},{"name":"internal","doc":null,"default_value":"false","external_name":"internal","restriction":""},{"name":"auto_delete","doc":null,"default_value":"false","external_name":"auto_delete","restriction":""},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""}],"args_string":"(name, type, passive = false, durable = true, exclusive = false, internal = false, auto_delete = false, args = Arguments.new)","args_html":"(name, type, passive = <span class=\"n\">false</span>, durable = <span class=\"n\">true</span>, exclusive = <span class=\"n\">false</span>, internal = <span class=\"n\">false</span>, auto_delete = <span class=\"n\">false</span>, args = <span class=\"t\">Arguments</span>.<span class=\"k\">new</span>)","location":{"filename":"src/amqp-client/channel.cr","line_number":435,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L435"},"def":{"name":"exchange","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"passive","doc":null,"default_value":"false","external_name":"passive","restriction":""},{"name":"durable","doc":null,"default_value":"true","external_name":"durable","restriction":""},{"name":"exclusive","doc":null,"default_value":"false","external_name":"exclusive","restriction":""},{"name":"internal","doc":null,"default_value":"false","external_name":"internal","restriction":""},{"name":"auto_delete","doc":null,"default_value":"false","external_name":"auto_delete","restriction":""},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"exchange_declare(name, type, passive, durable, exclusive, internal, auto_delete, false, args)\nExchange.new(self, name)\n"}},{"html_id":"exchange_bind(source:String,destination:String,routing_key:String,no_wait=false,args=Arguments.new):Nil-instance-method","name":"exchange_bind","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"String"},{"name":"destination","doc":null,"default_value":"","external_name":"destination","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"no_wait","doc":null,"default_value":"false","external_name":"no_wait","restriction":""},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""}],"args_string":"(source : String, destination : String, routing_key : String, no_wait = false, args = Arguments.new) : Nil","args_html":"(source : String, destination : String, routing_key : String, no_wait = <span class=\"n\">false</span>, args = <span class=\"t\">Arguments</span>.<span class=\"k\">new</span>) : Nil","location":{"filename":"src/amqp-client/channel.cr","line_number":457,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L457"},"def":{"name":"exchange_bind","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"String"},{"name":"destination","doc":null,"default_value":"","external_name":"destination","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"no_wait","doc":null,"default_value":"false","external_name":"no_wait","restriction":""},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"write(Frame::Exchange::Bind.new(@id, 0_u16, source, destination, routing_key, no_wait, args))\nif no_wait\nelse\n  expect(Frame::Exchange::BindOk)\nend\n"}},{"html_id":"exchange_declare(name:String,type:String,passive=false,durable=true,exclusive=false,internal=false,auto_delete=false,no_wait=false,args=Arguments.new):Nil-instance-method","name":"exchange_declare","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"},{"name":"passive","doc":null,"default_value":"false","external_name":"passive","restriction":""},{"name":"durable","doc":null,"default_value":"true","external_name":"durable","restriction":""},{"name":"exclusive","doc":null,"default_value":"false","external_name":"exclusive","restriction":""},{"name":"internal","doc":null,"default_value":"false","external_name":"internal","restriction":""},{"name":"auto_delete","doc":null,"default_value":"false","external_name":"auto_delete","restriction":""},{"name":"no_wait","doc":null,"default_value":"false","external_name":"no_wait","restriction":""},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""}],"args_string":"(name : String, type : String, passive = false, durable = true, exclusive = false, internal = false, auto_delete = false, no_wait = false, args = Arguments.new) : Nil","args_html":"(name : String, type : String, passive = <span class=\"n\">false</span>, durable = <span class=\"n\">true</span>, exclusive = <span class=\"n\">false</span>, internal = <span class=\"n\">false</span>, auto_delete = <span class=\"n\">false</span>, no_wait = <span class=\"n\">false</span>, args = <span class=\"t\">Arguments</span>.<span class=\"k\">new</span>) : Nil","location":{"filename":"src/amqp-client/channel.cr","line_number":441,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L441"},"def":{"name":"exchange_declare","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"},{"name":"passive","doc":null,"default_value":"false","external_name":"passive","restriction":""},{"name":"durable","doc":null,"default_value":"true","external_name":"durable","restriction":""},{"name":"exclusive","doc":null,"default_value":"false","external_name":"exclusive","restriction":""},{"name":"internal","doc":null,"default_value":"false","external_name":"internal","restriction":""},{"name":"auto_delete","doc":null,"default_value":"false","external_name":"auto_delete","restriction":""},{"name":"no_wait","doc":null,"default_value":"false","external_name":"no_wait","restriction":""},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if name.empty?\n  return\nend\nwrite(Frame::Exchange::Declare.new(@id, 0_u16, name, type, passive, durable, auto_delete, internal, no_wait, args))\nif no_wait\nelse\n  expect(Frame::Exchange::DeclareOk)\nend\n"}},{"html_id":"exchange_delete(name,if_unused=false,no_wait=false):Nil-instance-method","name":"exchange_delete","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"if_unused","doc":null,"default_value":"false","external_name":"if_unused","restriction":""},{"name":"no_wait","doc":null,"default_value":"false","external_name":"no_wait","restriction":""}],"args_string":"(name, if_unused = false, no_wait = false) : Nil","args_html":"(name, if_unused = <span class=\"n\">false</span>, no_wait = <span class=\"n\">false</span>) : Nil","location":{"filename":"src/amqp-client/channel.cr","line_number":452,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L452"},"def":{"name":"exchange_delete","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"if_unused","doc":null,"default_value":"false","external_name":"if_unused","restriction":""},{"name":"no_wait","doc":null,"default_value":"false","external_name":"no_wait","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"write(Frame::Exchange::Delete.new(@id, 0_u16, name, if_unused, no_wait))\nif no_wait\nelse\n  expect(Frame::Exchange::DeleteOk)\nend\n"}},{"html_id":"exchange_unbind(source:String,destination:String,routing_key:String,no_wait=false,args=Arguments.new):Nil-instance-method","name":"exchange_unbind","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"String"},{"name":"destination","doc":null,"default_value":"","external_name":"destination","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"no_wait","doc":null,"default_value":"false","external_name":"no_wait","restriction":""},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""}],"args_string":"(source : String, destination : String, routing_key : String, no_wait = false, args = Arguments.new) : Nil","args_html":"(source : String, destination : String, routing_key : String, no_wait = <span class=\"n\">false</span>, args = <span class=\"t\">Arguments</span>.<span class=\"k\">new</span>) : Nil","location":{"filename":"src/amqp-client/channel.cr","line_number":462,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L462"},"def":{"name":"exchange_unbind","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"String"},{"name":"destination","doc":null,"default_value":"","external_name":"destination","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"no_wait","doc":null,"default_value":"false","external_name":"no_wait","restriction":""},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"write(Frame::Exchange::Unbind.new(@id, 0_u16, source, destination, routing_key, no_wait, args))\nif no_wait\nelse\n  expect(Frame::Queue::UnbindOk)\nend\n"}},{"html_id":"fanout_exchange(name=\"amq.fanout\",passive=true)-instance-method","name":"fanout_exchange","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"\"amq.fanout\"","external_name":"name","restriction":""},{"name":"passive","doc":null,"default_value":"true","external_name":"passive","restriction":""}],"args_string":"(name = \"amq.fanout\", passive = true)","args_html":"(name = <span class=\"s\">&quot;amq.fanout&quot;</span>, passive = <span class=\"n\">true</span>)","location":{"filename":"src/amqp-client/channel.cr","line_number":419,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L419"},"def":{"name":"fanout_exchange","args":[{"name":"name","doc":null,"default_value":"\"amq.fanout\"","external_name":"name","restriction":""},{"name":"passive","doc":null,"default_value":"true","external_name":"passive","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"exchange(name, \"fanout\", passive)"}},{"html_id":"flow(active:Bool)-instance-method","name":"flow","doc":null,"summary":null,"abstract":false,"args":[{"name":"active","doc":null,"default_value":"","external_name":"active","restriction":"Bool"}],"args_string":"(active : Bool)","args_html":"(active : Bool)","location":{"filename":"src/amqp-client/channel.cr","line_number":62,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L62"},"def":{"name":"flow","args":[{"name":"active","doc":null,"default_value":"","external_name":"active","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"write(Frame::Channel::Flow.new(@id, active))\nexpect(Frame::Channel::FlowOk)\n"}},{"html_id":"has_subscriber?(consumer_tag)-instance-method","name":"has_subscriber?","doc":null,"summary":null,"abstract":false,"args":[{"name":"consumer_tag","doc":null,"default_value":"","external_name":"consumer_tag","restriction":""}],"args_string":"(consumer_tag)","args_html":"(consumer_tag)","location":{"filename":"src/amqp-client/channel.cr","line_number":310,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L310"},"def":{"name":"has_subscriber?","args":[{"name":"consumer_tag","doc":null,"default_value":"","external_name":"consumer_tag","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@consumers.has_key?(consumer_tag)"}},{"html_id":"header_exchange(name=\"amq.header\",passive=true)-instance-method","name":"header_exchange","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"\"amq.header\"","external_name":"name","restriction":""},{"name":"passive","doc":null,"default_value":"true","external_name":"passive","restriction":""}],"args_string":"(name = \"amq.header\", passive = true)","args_html":"(name = <span class=\"s\">&quot;amq.header&quot;</span>, passive = <span class=\"n\">true</span>)","location":{"filename":"src/amqp-client/channel.cr","line_number":423,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L423"},"def":{"name":"header_exchange","args":[{"name":"name","doc":null,"default_value":"\"amq.header\"","external_name":"name","restriction":""},{"name":"passive","doc":null,"default_value":"true","external_name":"passive","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"exchange(name, \"header\", passive)"}},{"html_id":"id:UInt16-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt16","args_html":" : UInt16","location":{"filename":"src/amqp-client/channel.cr","line_number":9,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L9"},"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"html_id":"incoming(frame)-instance-method","name":"incoming","doc":null,"summary":null,"abstract":false,"args":[{"name":"frame","doc":null,"default_value":"","external_name":"frame","restriction":""}],"args_string":"(frame)","args_html":"(frame)","location":{"filename":"src/amqp-client/channel.cr","line_number":88,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L88"},"def":{"name":"incoming","args":[{"name":"frame","doc":null,"default_value":"","external_name":"frame","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case frame\nwhen Frame::Basic::Deliver, Frame::Basic::Return, Frame::Basic::GetOk\n  @next_msg_deliver = frame\nwhen Frame::Basic::GetEmpty\n  @basic_get.send(nil)\nwhen Frame::Header\n  @next_msg_props = frame.properties\n  @next_body_size = frame.body_size.to_u32\n  @next_body_io = IO::Memory.new(frame.body_size)\n  if frame.body_size.zero?\n    process_deliver\n  end\nwhen Frame::Body\n  body_io = @next_body_io.not_nil!\n  IO.copy(frame.body, body_io, frame.body_size)\n  if body_io.pos == @next_body_size\n    body_io.rewind\n    process_deliver\n  end\nwhen Frame::Basic::Cancel\n  process_cancel(frame.consumer_tag, frame.no_wait)\nwhen Frame::Basic::CancelOk\n  process_cancel_ok(frame.consumer_tag)\nwhen Frame::Basic::Ack\n  process_confirm(true, frame.delivery_tag, frame.multiple)\nwhen Frame::Basic::Nack\n  process_confirm(false, frame.delivery_tag, frame.multiple)\nwhen Frame::Channel::Flow\n  process_flow(frame.active)\nwhen Frame::Channel::Close\n  close(frame)\nelse\n  @reply_frames.send(frame)\n  Fiber.yield\nend"}},{"html_id":"inspect(io:IO):Nil-instance-method","name":"inspect","doc":"Appends a String representation of this object\nwhich includes its class name, its object address\nand the values of all instance variables.\n\n```\nclass Person\n  def initialize(@name : String, @age : Int32)\n  end\nend\n\nPerson.new(\"John\", 32).inspect # => #<Person:0x10fd31f20 @name=\"John\", @age=32>\n```","summary":"<p>Appends a String representation of this object which includes its class name, its object address and the values of all instance variables.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/amqp-client/channel.cr","line_number":514,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L514"},"def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"((((io << \"#<\") << self.class.name) << \" @id=\") << @id) << '>'"}},{"html_id":"on_cancel(&blk:String->Nil)-instance-method","name":"on_cancel","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&blk : String -> Nil)","args_html":"(&blk : String -> Nil)","location":{"filename":"src/amqp-client/channel.cr","line_number":128,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L128"},"def":{"name":"on_cancel","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"blk","doc":null,"default_value":"","external_name":"blk","restriction":"(String -> Nil)"},"return_type":"","visibility":"Public","body":"@on_cancel = blk"}},{"html_id":"on_close(&blk:UInt16,String->)-instance-method","name":"on_close","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&blk : UInt16, String -> )","args_html":"(&blk : UInt16, String -> )","location":{"filename":"src/amqp-client/channel.cr","line_number":33,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L33"},"def":{"name":"on_close","args":[],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"blk","doc":null,"default_value":"","external_name":"blk","restriction":"(UInt16, String ->)"},"return_type":"","visibility":"Public","body":"@on_close = blk"}},{"html_id":"on_confirm(msgid,&blk:Bool->Nil)-instance-method","name":"on_confirm","doc":null,"summary":null,"abstract":false,"args":[{"name":"msgid","doc":null,"default_value":"","external_name":"msgid","restriction":""}],"args_string":"(msgid, &blk : Bool -> Nil)","args_html":"(msgid, &blk : Bool -> Nil)","location":{"filename":"src/amqp-client/channel.cr","line_number":279,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L279"},"def":{"name":"on_confirm","args":[{"name":"msgid","doc":null,"default_value":"","external_name":"msgid","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"blk","doc":null,"default_value":"","external_name":"blk","restriction":"(Bool -> Nil)"},"return_type":"","visibility":"Public","body":"if msgid > 0\nelse\n  raise(ArgumentError.new(\"Confirm id must be > 0\"))\nend\nlast_confirm, last_confirm_ok = @last_confirm\nif last_confirm >= msgid.to_u64\n  blk.call(last_confirm_ok)\nelse\n  @on_confirm[msgid.to_u64] = blk\nend\n"}},{"html_id":"on_return(&blk:ReturnedMessage->Nil)-instance-method","name":"on_return","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&blk : ReturnedMessage -> Nil)","args_html":"(&blk : <a href=\"../../AMQP/Client/ReturnedMessage.html\">ReturnedMessage</a> -> Nil)","location":{"filename":"src/amqp-client/channel.cr","line_number":205,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L205"},"def":{"name":"on_return","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"blk","doc":null,"default_value":"","external_name":"blk","restriction":"(ReturnedMessage -> Nil)"},"return_type":"","visibility":"Public","body":"@on_return = blk"}},{"html_id":"open-instance-method","name":"open","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/amqp-client/channel.cr","line_number":25,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L25"},"def":{"name":"open","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"write(Frame::Channel::Open.new(@id))\nexpect(Frame::Channel::OpenOk)\nself\n"}},{"html_id":"prefetch(count,global=false):Nil-instance-method","name":"prefetch","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":""},{"name":"global","doc":null,"default_value":"false","external_name":"global","restriction":""}],"args_string":"(count, global = false) : Nil","args_html":"(count, global = <span class=\"n\">false</span>) : Nil","location":{"filename":"src/amqp-client/channel.cr","line_number":361,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L361"},"def":{"name":"prefetch","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":""},{"name":"global","doc":null,"default_value":"false","external_name":"global","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"basic_qos(count, global)"}},{"html_id":"queue(name:String,passive=false,durable=true,exclusive=false,auto_delete=false,args=Arguments.new)-instance-method","name":"queue","doc":"Declares a queue with a name, by default durable and not auto-deleted","summary":"<p>Declares a queue with a name, by default durable and not auto-deleted</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"passive","doc":null,"default_value":"false","external_name":"passive","restriction":""},{"name":"durable","doc":null,"default_value":"true","external_name":"durable","restriction":""},{"name":"exclusive","doc":null,"default_value":"false","external_name":"exclusive","restriction":""},{"name":"auto_delete","doc":null,"default_value":"false","external_name":"auto_delete","restriction":""},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""}],"args_string":"(name : String, passive = false, durable = true, exclusive = false, auto_delete = false, args = Arguments.new)","args_html":"(name : String, passive = <span class=\"n\">false</span>, durable = <span class=\"n\">true</span>, exclusive = <span class=\"n\">false</span>, auto_delete = <span class=\"n\">false</span>, args = <span class=\"t\">Arguments</span>.<span class=\"k\">new</span>)","location":{"filename":"src/amqp-client/channel.cr","line_number":372,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L372"},"def":{"name":"queue","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"passive","doc":null,"default_value":"false","external_name":"passive","restriction":""},{"name":"durable","doc":null,"default_value":"true","external_name":"durable","restriction":""},{"name":"exclusive","doc":null,"default_value":"false","external_name":"exclusive","restriction":""},{"name":"auto_delete","doc":null,"default_value":"false","external_name":"auto_delete","restriction":""},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"q = queue_declare(name, passive, durable, exclusive, auto_delete, args)\nQueue.new(self, q[:queue_name])\n"}},{"html_id":"queue-instance-method","name":"queue","doc":"Declares a temporary queue, which won't be durable and auto-deleted when not used anymore","summary":"<p>Declares a temporary queue, which won't be durable and auto-deleted when not used anymore</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/amqp-client/channel.cr","line_number":366,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L366"},"def":{"name":"queue","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"q = queue_declare(\"\", durable: false, auto_delete: true, exclusive: true)\nQueue.new(self, q[:queue_name])\n"}},{"html_id":"queue_bind(queue:String,exchange:String,routing_key:String,no_wait=false,args=Arguments.new):Nil-instance-method","name":"queue_bind","doc":null,"summary":null,"abstract":false,"args":[{"name":"queue","doc":null,"default_value":"","external_name":"queue","restriction":"String"},{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"no_wait","doc":null,"default_value":"false","external_name":"no_wait","restriction":""},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""}],"args_string":"(queue : String, exchange : String, routing_key : String, no_wait = false, args = Arguments.new) : Nil","args_html":"(queue : String, exchange : String, routing_key : String, no_wait = <span class=\"n\">false</span>, args = <span class=\"t\">Arguments</span>.<span class=\"k\">new</span>) : Nil","location":{"filename":"src/amqp-client/channel.cr","line_number":405,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L405"},"def":{"name":"queue_bind","args":[{"name":"queue","doc":null,"default_value":"","external_name":"queue","restriction":"String"},{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"no_wait","doc":null,"default_value":"false","external_name":"no_wait","restriction":""},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"write(Frame::Queue::Bind.new(@id, 0_u16, queue, exchange, routing_key, no_wait, args))\nif no_wait\nelse\n  expect(Frame::Queue::BindOk)\nend\n"}},{"html_id":"queue_declare(name:String,passive=false,durable=true,exclusive=false,auto_delete=false,args=Arguments.new)-instance-method","name":"queue_declare","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"passive","doc":null,"default_value":"false","external_name":"passive","restriction":""},{"name":"durable","doc":null,"default_value":"true","external_name":"durable","restriction":""},{"name":"exclusive","doc":null,"default_value":"false","external_name":"exclusive","restriction":""},{"name":"auto_delete","doc":null,"default_value":"false","external_name":"auto_delete","restriction":""},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""}],"args_string":"(name : String, passive = false, durable = true, exclusive = false, auto_delete = false, args = Arguments.new)","args_html":"(name : String, passive = <span class=\"n\">false</span>, durable = <span class=\"n\">true</span>, exclusive = <span class=\"n\">false</span>, auto_delete = <span class=\"n\">false</span>, args = <span class=\"t\">Arguments</span>.<span class=\"k\">new</span>)","location":{"filename":"src/amqp-client/channel.cr","line_number":377,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L377"},"def":{"name":"queue_declare","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"passive","doc":null,"default_value":"false","external_name":"passive","restriction":""},{"name":"durable","doc":null,"default_value":"true","external_name":"durable","restriction":""},{"name":"exclusive","doc":null,"default_value":"false","external_name":"exclusive","restriction":""},{"name":"auto_delete","doc":null,"default_value":"false","external_name":"auto_delete","restriction":""},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if name.empty?\n  durable = false\nend\nif name.empty?\n  exclusive = true\nend\nif name.empty?\n  auto_delete = true\nend\nno_wait = false\nwrite(Frame::Queue::Declare.new(@id, 0_u16, name, passive, durable, exclusive, auto_delete, no_wait, args))\nf = expect(Frame::Queue::DeclareOk)\n{queue_name: f.queue_name, message_count: f.message_count, consumer_count: f.consumer_count}\n"}},{"html_id":"queue_delete(name:String,if_unused=false,if_empty=false)-instance-method","name":"queue_delete","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"if_unused","doc":null,"default_value":"false","external_name":"if_unused","restriction":""},{"name":"if_empty","doc":null,"default_value":"false","external_name":"if_empty","restriction":""}],"args_string":"(name : String, if_unused = false, if_empty = false)","args_html":"(name : String, if_unused = <span class=\"n\">false</span>, if_empty = <span class=\"n\">false</span>)","location":{"filename":"src/amqp-client/channel.cr","line_number":393,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L393"},"def":{"name":"queue_delete","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"if_unused","doc":null,"default_value":"false","external_name":"if_unused","restriction":""},{"name":"if_empty","doc":null,"default_value":"false","external_name":"if_empty","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"write(Frame::Queue::Delete.new(@id, 0_u16, name, if_unused, if_empty, no_wait: false))\nf = expect(Frame::Queue::DeleteOk)\n{message_count: f.message_count}\n"}},{"html_id":"queue_purge(name:String)-instance-method","name":"queue_purge","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/amqp-client/channel.cr","line_number":399,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L399"},"def":{"name":"queue_purge","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"write(Frame::Queue::Purge.new(@id, 0_u16, name, no_wait: false))\nf = expect(Frame::Queue::PurgeOk)\n{message_count: f.message_count}\n"}},{"html_id":"queue_unbind(queue:String,exchange:String,routing_key:String,args=Arguments.new):Nil-instance-method","name":"queue_unbind","doc":null,"summary":null,"abstract":false,"args":[{"name":"queue","doc":null,"default_value":"","external_name":"queue","restriction":"String"},{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""}],"args_string":"(queue : String, exchange : String, routing_key : String, args = Arguments.new) : Nil","args_html":"(queue : String, exchange : String, routing_key : String, args = <span class=\"t\">Arguments</span>.<span class=\"k\">new</span>) : Nil","location":{"filename":"src/amqp-client/channel.cr","line_number":410,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L410"},"def":{"name":"queue_unbind","args":[{"name":"queue","doc":null,"default_value":"","external_name":"queue","restriction":"String"},{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"write(Frame::Queue::Unbind.new(@id, 0_u16, queue, exchange, routing_key, args))\nexpect(Frame::Queue::UnbindOk)\n"}},{"html_id":"topic_exchange(name=\"amq.topic\",passive=true)-instance-method","name":"topic_exchange","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"\"amq.topic\"","external_name":"name","restriction":""},{"name":"passive","doc":null,"default_value":"true","external_name":"passive","restriction":""}],"args_string":"(name = \"amq.topic\", passive = true)","args_html":"(name = <span class=\"s\">&quot;amq.topic&quot;</span>, passive = <span class=\"n\">true</span>)","location":{"filename":"src/amqp-client/channel.cr","line_number":415,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L415"},"def":{"name":"topic_exchange","args":[{"name":"name","doc":null,"default_value":"\"amq.topic\"","external_name":"name","restriction":""},{"name":"passive","doc":null,"default_value":"true","external_name":"passive","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"exchange(name, \"topic\", passive)"}},{"html_id":"tx_commit-instance-method","name":"tx_commit","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/amqp-client/channel.cr","line_number":484,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L484"},"def":{"name":"tx_commit","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"write(Frame::Tx::Commit.new(@id))\nexpect(Frame::Tx::CommitOk)\n"}},{"html_id":"tx_rollback-instance-method","name":"tx_rollback","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/amqp-client/channel.cr","line_number":489,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L489"},"def":{"name":"tx_rollback","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"write(Frame::Tx::Rollback.new(@id))\nexpect(Frame::Tx::RollbackOk)\n"}},{"html_id":"tx_select-instance-method","name":"tx_select","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/amqp-client/channel.cr","line_number":479,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L479"},"def":{"name":"tx_select","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"write(Frame::Tx::Select.new(@id))\nexpect(Frame::Tx::SelectOk)\n"}},{"html_id":"wait_for_confirm(msgid):Bool-instance-method","name":"wait_for_confirm","doc":"Block until confirmed","summary":"<p>Block until confirmed</p>","abstract":false,"args":[{"name":"msgid","doc":null,"default_value":"","external_name":"msgid","restriction":""}],"args_string":"(msgid) : Bool","args_html":"(msgid) : Bool","location":{"filename":"src/amqp-client/channel.cr","line_number":266,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L266"},"def":{"name":"wait_for_confirm","args":[{"name":"msgid","doc":null,"default_value":"","external_name":"msgid","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"begin\n  ch = ::Channel(Bool).new\n  on_confirm(msgid) do |acked|\n    ch.send(acked)\n  end\n  ch.receive\nensure\n  if @closing_frame\n    raise(ClosedException.new(@closing_frame))\n  end\nend"}}],"macros":[{"html_id":"expect(clz)-macro","name":"expect","doc":null,"summary":null,"abstract":false,"args":[{"name":"clz","doc":null,"default_value":"","external_name":"clz","restriction":""}],"args_string":"(clz)","args_html":"(clz)","location":{"filename":"src/amqp-client/channel.cr","line_number":509,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/channel.cr#L509"},"def":{"name":"expect","args":[{"name":"clz","doc":null,"default_value":"","external_name":"clz","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      frame = next_frame\n      frame.as?(\n{{ clz }}\n) || raise UnexpectedFrame.new(frame)\n    \n"}}],"types":[{"html_id":"amqp-client/AMQP/Client/Channel/ClosedException","path":"AMQP/Client/Channel/ClosedException.html","kind":"class","full_name":"AMQP::Client::Channel::ClosedException","name":"ClosedException","abstract":false,"superclass":{"html_id":"amqp-client/AMQP/Client/Error","kind":"class","full_name":"AMQP::Client::Error","name":"Error"},"ancestors":[{"html_id":"amqp-client/AMQP/Client/Error","kind":"class","full_name":"AMQP::Client::Error","name":"Error"},{"html_id":"amqp-client/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"amqp-client/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"amqp-client/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/amqp-client/errors.cr","line_number":28,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/errors.cr#L28"}],"repository_name":"amqp-client","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"amqp-client/AMQP/Client/Channel","kind":"class","full_name":"AMQP::Client::Channel","name":"Channel"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"html_id":"new(close:Frame::Channel::Close?,cause=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"close","doc":null,"default_value":"","external_name":"close","restriction":"Frame::Channel::Close | ::Nil"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":""}],"args_string":"(close : Frame::Channel::Close?, cause = nil)","args_html":"(close : Frame::Channel::Close?, cause = <span class=\"n\">nil</span>)","location":{"filename":"src/amqp-client/errors.cr","line_number":29,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/errors.cr#L29"},"def":{"name":"new","args":[{"name":"close","doc":null,"default_value":"","external_name":"close","restriction":"Frame::Channel::Close | ::Nil"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(close, cause)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"amqp-client/AMQP/Client/Connection","path":"AMQP/Client/Connection.html","kind":"class","full_name":"AMQP::Client::Connection","name":"Connection","abstract":false,"superclass":{"html_id":"amqp-client/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"amqp-client/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"amqp-client/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/amqp-client/connection.cr","line_number":9,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/connection.cr#L9"},{"filename":"src/amqp-client/errors.cr","line_number":15,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/errors.cr#L15"}],"repository_name":"amqp-client","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"LOG","name":"LOG","value":"AMQP::Client::LOG.for(self)","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"amqp-client/AMQP/Client","kind":"class","full_name":"AMQP::Client","name":"Client"},"doc":null,"summary":null,"class_methods":[{"html_id":"start(io:UNIXSocket|TCPSocket|OpenSSL::SSL::Socket::Client|WebSocketIO,user,password,vhost,channel_max,frame_max,heartbeat,name:String?)-class-method","name":"start","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"UNIXSocket | TCPSocket | OpenSSL::SSL::Socket::Client | WebSocketIO"},{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":""},{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":""},{"name":"vhost","doc":null,"default_value":"","external_name":"vhost","restriction":""},{"name":"channel_max","doc":null,"default_value":"","external_name":"channel_max","restriction":""},{"name":"frame_max","doc":null,"default_value":"","external_name":"frame_max","restriction":""},{"name":"heartbeat","doc":null,"default_value":"","external_name":"heartbeat","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String | ::Nil"}],"args_string":"(io : UNIXSocket | TCPSocket | OpenSSL::SSL::Socket::Client | WebSocketIO, user, password, vhost, channel_max, frame_max, heartbeat, name : String?)","args_html":"(io : UNIXSocket | TCPSocket | OpenSSL::SSL::Socket::Client | <a href=\"../../AMQP/Client/WebSocketIO.html\">WebSocketIO</a>, user, password, vhost, channel_max, frame_max, heartbeat, name : String?)","location":{"filename":"src/amqp-client/connection.cr","line_number":175,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/connection.cr#L175"},"def":{"name":"start","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"UNIXSocket | TCPSocket | OpenSSL::SSL::Socket::Client | WebSocketIO"},{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":""},{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":""},{"name":"vhost","doc":null,"default_value":"","external_name":"vhost","restriction":""},{"name":"channel_max","doc":null,"default_value":"","external_name":"channel_max","restriction":""},{"name":"frame_max","doc":null,"default_value":"","external_name":"frame_max","restriction":""},{"name":"heartbeat","doc":null,"default_value":"","external_name":"heartbeat","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  io.read_timeout = 15\n  io.write(AMQ::Protocol::PROTOCOL_START_0_9_1.to_slice)\n  io.flush\n  Frame.from_io(io) do |f|\n    (f.as?(Frame::Connection::Start)) || (raise(UnexpectedFrame.new(f)))\n  end\n  props = Arguments.new\n  if name\n    props[\"connection_name\"] = name\n  end\n  props[\"product\"] = \"amqp-client.cr\"\n  props[\"platform\"] = \"Crystal\"\n  props[\"version\"] = AMQP::Client::VERSION\n  capabilities = Arguments.new\n  capabilities[\"publisher_confirms\"] = true\n  capabilities[\"exchange_exchange_bindings\"] = true\n  capabilities[\"basic.nack\"] = true\n  capabilities[\"per_consumer_qos\"] = true\n  capabilities[\"authentication_failure_close\"] = true\n  capabilities[\"consumer_cancel_notify\"] = true\n  capabilities[\"connection.blocked\"] = true\n  props[\"capabilities\"] = capabilities\n  user = URI.decode_www_form(user)\n  password = URI.decode_www_form(password)\n  response = \"\\u0000#{user}\\u0000#{password}\"\n  io.write_bytes(Frame::Connection::StartOk.new(props, \"PLAIN\", response, \"\"), IO::ByteFormat::NetworkEndian)\n  io.flush\n  tune = Frame.from_io(io) do |f|\n    case f\n    when Frame::Connection::Tune\n      next f\n    when Frame::Connection::Close\n      raise(Connection::ClosedException.new(f.as(Frame::Connection::Close)))\n    else\n      raise(UnexpectedFrame.new(f))\n    end\n  end\n  channel_max = tune.channel_max.zero? ? channel_max : Math.min(tune.channel_max, channel_max)\n  frame_max = tune.frame_max.zero? ? frame_max : Math.min(tune.frame_max, frame_max)\n  io.write_bytes(Frame::Connection::TuneOk.new(channel_max: channel_max, frame_max: frame_max, heartbeat: heartbeat), IO::ByteFormat::NetworkEndian)\n  io.write_bytes(Frame::Connection::Open.new(vhost), IO::ByteFormat::NetworkEndian)\n  io.flush\n  Frame.from_io(io) do |f|\n    case f\n    when Frame::Connection::OpenOk\n      next\n    when Frame::Connection::Close\n      raise(Connection::ClosedException.new(f.as(Frame::Connection::Close)))\n    else\n      raise(UnexpectedFrame.new(f))\n    end\n  end\n  Connection.new(io, channel_max, frame_max, heartbeat)\nrescue ex\n  case ex\n  when IO::EOFError\n    raise(Connection::ClosedException.new(\"Connection closed by server\", ex))\n  when Connection::ClosedException\n    begin\n      io.write_bytes(Frame::Connection::CloseOk.new, IO::ByteFormat::NetworkEndian)\n    rescue\n      nil\n    end\n  else\n    nil\n  end\n  begin\n    io.close\n  rescue\n    nil\n  end\n  raise(ex)\nensure\n  io.read_timeout = nil\nend"}}],"constructors":[{"html_id":"new(io:UNIXSocket|TCPSocket|OpenSSL::SSL::Socket::Client|WebSocketIO,channel_max:UInt16,frame_max:UInt32,heartbeat:UInt16)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"UNIXSocket | TCPSocket | OpenSSL::SSL::Socket::Client | WebSocketIO"},{"name":"channel_max","doc":null,"default_value":"","external_name":"channel_max","restriction":"UInt16"},{"name":"frame_max","doc":null,"default_value":"","external_name":"frame_max","restriction":"UInt32"},{"name":"heartbeat","doc":null,"default_value":"","external_name":"heartbeat","restriction":"UInt16"}],"args_string":"(io : UNIXSocket | TCPSocket | OpenSSL::SSL::Socket::Client | WebSocketIO, channel_max : UInt16, frame_max : UInt32, heartbeat : UInt16)","args_html":"(io : UNIXSocket | TCPSocket | OpenSSL::SSL::Socket::Client | <a href=\"../../AMQP/Client/WebSocketIO.html\">WebSocketIO</a>, channel_max : UInt16, frame_max : UInt32, heartbeat : UInt16)","location":{"filename":"src/amqp-client/connection.cr","line_number":17,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/connection.cr#L17"},"def":{"name":"new","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"UNIXSocket | TCPSocket | OpenSSL::SSL::Socket::Client | WebSocketIO"},{"name":"channel_max","doc":null,"default_value":"","external_name":"channel_max","restriction":"UInt16"},{"name":"frame_max","doc":null,"default_value":"","external_name":"frame_max","restriction":"UInt32"},{"name":"heartbeat","doc":null,"default_value":"","external_name":"heartbeat","restriction":"UInt16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(io, channel_max, frame_max, heartbeat)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"channel(id:Int?=nil)-instance-method","name":"channel","doc":null,"summary":null,"abstract":false,"args":[{"name":"id","doc":null,"default_value":"nil","external_name":"id","restriction":"Int | ::Nil"}],"args_string":"(id : Int? = nil)","args_html":"(id : Int? = <span class=\"n\">nil</span>)","location":{"filename":"src/amqp-client/connection.cr","line_number":24,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/connection.cr#L24"},"def":{"name":"channel","args":[{"name":"id","doc":null,"default_value":"nil","external_name":"id","restriction":"Int | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if id\n  if id > @channel_max\n    raise(\"channel_max reached\")\n  end\n  if ch = @channels.fetch(id, nil)\n    return ch\n  else\n    ch = @channels[id] = Channel.new(self, id)\n    return ch.open\n  end\nend\n1_u16.upto(@channel_max) do |i|\n  if @channels.has_key?(i)\n    next\n  end\n  ch = @channels[i] = Channel.new(self, i)\n  return ch.open\nend\nraise(\"channel_max reached\")\n"}},{"html_id":"channel(&blk:Channel->_)-instance-method","name":"channel","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&blk : Channel -> _)","args_html":"(&blk : <a href=\"../../AMQP/Client/Channel.html\">Channel</a> -> _)","location":{"filename":"src/amqp-client/connection.cr","line_number":42,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/connection.cr#L42"},"def":{"name":"channel","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"blk","doc":null,"default_value":"","external_name":"blk","restriction":"(Channel -> _)"},"return_type":"","visibility":"Public","body":"begin\n  ch = channel\n  yield ch\nensure\n  ch.try(&.close)\nend"}},{"html_id":"channel_max:UInt16-instance-method","name":"channel_max","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt16","args_html":" : UInt16","location":{"filename":"src/amqp-client/connection.cr","line_number":14,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/connection.cr#L14"},"def":{"name":"channel_max","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel_max"}},{"html_id":"close(msg=\"\",no_wait=false)-instance-method","name":"close","doc":null,"summary":null,"abstract":false,"args":[{"name":"msg","doc":null,"default_value":"\"\"","external_name":"msg","restriction":""},{"name":"no_wait","doc":null,"default_value":"false","external_name":"no_wait","restriction":""}],"args_string":"(msg = \"\", no_wait = false)","args_html":"(msg = <span class=\"s\">&quot;&quot;</span>, no_wait = <span class=\"n\">false</span>)","location":{"filename":"src/amqp-client/connection.cr","line_number":153,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/connection.cr#L153"},"def":{"name":"close","args":[{"name":"msg","doc":null,"default_value":"\"\"","external_name":"msg","restriction":""},{"name":"no_wait","doc":null,"default_value":"false","external_name":"no_wait","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  if @closed\n    return\n  end\n  LOG.debug do\n    \"Closing connection\"\n  end\n  write(Frame::Connection::Close.new(200_u16, msg, 0_u16, 0_u16))\n  if no_wait\n    return\n  end\n  while frame = @reply_frames.receive?\n    if frame.as?(Frame::Connection::CloseOk)\n      LOG.debug do\n        \"Server confirmed close\"\n      end\n      return\n    end\n  end\n  LOG.debug do\n    \"Server didn't confirm close\"\n  end\nrescue ex : IO::Error\n  LOG.info do\n    \"Socket already closed, can't send close frame\"\n  end\nensure\n  @closed = true\n  @reply_frames.close\n  begin\n    @io.close\n  rescue\n    nil\n  end\n  @channels.each_value(&.cleanup)\n  @channels.clear\nend"}},{"html_id":"closed?:Bool-instance-method","name":"closed?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/amqp-client/connection.cr","line_number":15,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/connection.cr#L15"},"def":{"name":"closed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@closed"}},{"html_id":"closing_frame:Frame::Connection::Close?-instance-method","name":"closing_frame","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Frame::Connection::Close?","args_html":" : Frame::Connection::Close?","location":{"filename":"src/amqp-client/connection.cr","line_number":13,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/connection.cr#L13"},"def":{"name":"closing_frame","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Frame::Connection::Close | ::Nil","visibility":"Public","body":"@closing_frame"}},{"html_id":"frame_max:UInt32-instance-method","name":"frame_max","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","args_html":" : UInt32","location":{"filename":"src/amqp-client/connection.cr","line_number":14,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/connection.cr#L14"},"def":{"name":"frame_max","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@frame_max"}},{"html_id":"on_close(&blk:UInt16,String->)-instance-method","name":"on_close","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&blk : UInt16, String -> )","args_html":"(&blk : UInt16, String -> )","location":{"filename":"src/amqp-client/connection.cr","line_number":51,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/connection.cr#L51"},"def":{"name":"on_close","args":[],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"blk","doc":null,"default_value":"","external_name":"blk","restriction":"(UInt16, String ->)"},"return_type":"","visibility":"Public","body":"@on_close = blk"}},{"html_id":"unsafe_write(frame:Frame)-instance-method","name":"unsafe_write","doc":null,"summary":null,"abstract":false,"args":[{"name":"frame","doc":null,"default_value":"","external_name":"frame","restriction":"Frame"}],"args_string":"(frame : Frame)","args_html":"(frame : <a href=\"../../AMQP/Client/Frame.html\">Frame</a>)","location":{"filename":"src/amqp-client/connection.cr","line_number":130,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/connection.cr#L130"},"def":{"name":"unsafe_write","args":[{"name":"frame","doc":null,"default_value":"","external_name":"frame","restriction":"Frame"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @closed\n  if f = @closing_frame\n    raise(ClosedException.new(f))\n  else\n    return\n  end\nend\nbegin\n  @io.write_bytes(frame, ::IO::ByteFormat::NetworkEndian)\nrescue ex\n  raise(Error.new(cause: ex))\nend\nLOG.debug do\n  \"sent #{frame.inspect}\"\nend\n"}},{"html_id":"with_lock(&blk:self->_)-instance-method","name":"with_lock","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&blk : self -> _)","args_html":"(&blk : <span class=\"k\">self</span> -> _)","location":{"filename":"src/amqp-client/connection.cr","line_number":146,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/connection.cr#L146"},"def":{"name":"with_lock","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"blk","doc":null,"default_value":"","external_name":"blk","restriction":"(self -> _)"},"return_type":"","visibility":"Public","body":"@write_lock.synchronize do\n  yield self\n  @io.flush\nend"}},{"html_id":"write(frame:Frame)-instance-method","name":"write","doc":null,"summary":null,"abstract":false,"args":[{"name":"frame","doc":null,"default_value":"","external_name":"frame","restriction":"Frame"}],"args_string":"(frame : Frame)","args_html":"(frame : <a href=\"../../AMQP/Client/Frame.html\">Frame</a>)","location":{"filename":"src/amqp-client/connection.cr","line_number":123,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/connection.cr#L123"},"def":{"name":"write","args":[{"name":"frame","doc":null,"default_value":"","external_name":"frame","restriction":"Frame"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@write_lock.synchronize do\n  unsafe_write(frame)\n  @io.flush\nend"}}],"macros":[],"types":[{"html_id":"amqp-client/AMQP/Client/Connection/ClosedException","path":"AMQP/Client/Connection/ClosedException.html","kind":"class","full_name":"AMQP::Client::Connection::ClosedException","name":"ClosedException","abstract":false,"superclass":{"html_id":"amqp-client/AMQP/Client/Error","kind":"class","full_name":"AMQP::Client::Error","name":"Error"},"ancestors":[{"html_id":"amqp-client/AMQP/Client/Error","kind":"class","full_name":"AMQP::Client::Error","name":"Error"},{"html_id":"amqp-client/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"amqp-client/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"amqp-client/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/amqp-client/errors.cr","line_number":16,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/errors.cr#L16"}],"repository_name":"amqp-client","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"amqp-client/AMQP/Client/Connection","kind":"class","full_name":"AMQP::Client::Connection","name":"Connection"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"html_id":"new(message,cause)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"cause","doc":null,"default_value":"","external_name":"cause","restriction":""}],"args_string":"(message, cause)","args_html":"(message, cause)","location":{"filename":"src/amqp-client/errors.cr","line_number":17,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/errors.cr#L17"},"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"cause","doc":null,"default_value":"","external_name":"cause","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(close:Frame::Connection::Close)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"close","doc":null,"default_value":"","external_name":"close","restriction":"Frame::Connection::Close"}],"args_string":"(close : Frame::Connection::Close)","args_html":"(close : Frame::Connection::Close)","location":{"filename":"src/amqp-client/errors.cr","line_number":21,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/errors.cr#L21"},"def":{"name":"new","args":[{"name":"close","doc":null,"default_value":"","external_name":"close","restriction":"Frame::Connection::Close"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(close)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"amqp-client/AMQP/Client/DeliverMessage","path":"AMQP/Client/DeliverMessage.html","kind":"struct","full_name":"AMQP::Client::DeliverMessage","name":"DeliverMessage","abstract":false,"superclass":{"html_id":"amqp-client/AMQP/Client/Message","kind":"struct","full_name":"AMQP::Client::Message","name":"Message"},"ancestors":[{"html_id":"amqp-client/AMQP/Client/Message","kind":"struct","full_name":"AMQP::Client::Message","name":"Message"},{"html_id":"amqp-client/AMQP/Client/BaseMessage","kind":"struct","full_name":"AMQP::Client::BaseMessage","name":"BaseMessage"},{"html_id":"amqp-client/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"amqp-client/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"amqp-client/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/amqp-client/message.cr","line_number":46,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/message.cr#L46"}],"repository_name":"amqp-client","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"amqp-client/AMQP/Client","kind":"class","full_name":"AMQP::Client","name":"Client"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"amqp-client/AMQP/Client/Error","path":"AMQP/Client/Error.html","kind":"class","full_name":"AMQP::Client::Error","name":"Error","abstract":false,"superclass":{"html_id":"amqp-client/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"amqp-client/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"amqp-client/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"amqp-client/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/amqp-client/errors.cr","line_number":2,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/errors.cr#L2"}],"repository_name":"amqp-client","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"amqp-client/AMQP/Client/Channel/ClosedException","kind":"class","full_name":"AMQP::Client::Channel::ClosedException","name":"ClosedException"},{"html_id":"amqp-client/AMQP/Client/Connection/ClosedException","kind":"class","full_name":"AMQP::Client::Connection::ClosedException","name":"ClosedException"},{"html_id":"amqp-client/AMQP/Client/UnexpectedFrame","kind":"class","full_name":"AMQP::Client::UnexpectedFrame","name":"UnexpectedFrame"}],"including_types":[],"namespace":{"html_id":"amqp-client/AMQP/Client","kind":"class","full_name":"AMQP::Client","name":"Client"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"amqp-client/AMQP/Client/Exchange","path":"AMQP/Client/Exchange.html","kind":"class","full_name":"AMQP::Client::Exchange","name":"Exchange","abstract":false,"superclass":{"html_id":"amqp-client/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"amqp-client/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"amqp-client/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/amqp-client/exchange.cr","line_number":4,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/exchange.cr#L4"}],"repository_name":"amqp-client","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"amqp-client/AMQP/Client","kind":"class","full_name":"AMQP::Client","name":"Client"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"html_id":"new(channel:Channel,name:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"channel","doc":null,"default_value":"","external_name":"channel","restriction":"Channel"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(channel : Channel, name : String)","args_html":"(channel : <a href=\"../../AMQP/Client/Channel.html\">Channel</a>, name : String)","location":{"filename":"src/amqp-client/exchange.cr","line_number":7,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/exchange.cr#L7"},"def":{"name":"new","args":[{"name":"channel","doc":null,"default_value":"","external_name":"channel","restriction":"Channel"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(channel, name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"bind(exchange:String,routing_key:String,no_wait=false,args=Arguments.new)-instance-method","name":"bind","doc":null,"summary":null,"abstract":false,"args":[{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"no_wait","doc":null,"default_value":"false","external_name":"no_wait","restriction":""},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""}],"args_string":"(exchange : String, routing_key : String, no_wait = false, args = Arguments.new)","args_html":"(exchange : String, routing_key : String, no_wait = <span class=\"n\">false</span>, args = <span class=\"t\">Arguments</span>.<span class=\"k\">new</span>)","location":{"filename":"src/amqp-client/exchange.cr","line_number":10,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/exchange.cr#L10"},"def":{"name":"bind","args":[{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"no_wait","doc":null,"default_value":"false","external_name":"no_wait","restriction":""},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel.exchange_bind(@name, exchange, routing_key, no_wait, args)\nself\n"}},{"html_id":"delete(if_unused=false)-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[{"name":"if_unused","doc":null,"default_value":"false","external_name":"if_unused","restriction":""}],"args_string":"(if_unused = false)","args_html":"(if_unused = <span class=\"n\">false</span>)","location":{"filename":"src/amqp-client/exchange.cr","line_number":28,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/exchange.cr#L28"},"def":{"name":"delete","args":[{"name":"if_unused","doc":null,"default_value":"false","external_name":"if_unused","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel.exchange_delete(@name, if_unused)"}},{"html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/amqp-client/exchange.cr","line_number":5,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/exchange.cr#L5"},"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"html_id":"publish(message,routing_key:String,mandatory=false,immediate=false,props=Properties.new)-instance-method","name":"publish","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"mandatory","doc":null,"default_value":"false","external_name":"mandatory","restriction":""},{"name":"immediate","doc":null,"default_value":"false","external_name":"immediate","restriction":""},{"name":"props","doc":null,"default_value":"Properties.new","external_name":"props","restriction":""}],"args_string":"(message, routing_key : String, mandatory = false, immediate = false, props = Properties.new)","args_html":"(message, routing_key : String, mandatory = <span class=\"n\">false</span>, immediate = <span class=\"n\">false</span>, props = <span class=\"t\">Properties</span>.<span class=\"k\">new</span>)","location":{"filename":"src/amqp-client/exchange.cr","line_number":20,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/exchange.cr#L20"},"def":{"name":"publish","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"mandatory","doc":null,"default_value":"false","external_name":"mandatory","restriction":""},{"name":"immediate","doc":null,"default_value":"false","external_name":"immediate","restriction":""},{"name":"props","doc":null,"default_value":"Properties.new","external_name":"props","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel.basic_publish(message, @name, routing_key, mandatory, immediate, props)"}},{"html_id":"publish_confirm(message,routing_key:String,mandatory=false,immediate=false,props=Properties.new)-instance-method","name":"publish_confirm","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"mandatory","doc":null,"default_value":"false","external_name":"mandatory","restriction":""},{"name":"immediate","doc":null,"default_value":"false","external_name":"immediate","restriction":""},{"name":"props","doc":null,"default_value":"Properties.new","external_name":"props","restriction":""}],"args_string":"(message, routing_key : String, mandatory = false, immediate = false, props = Properties.new)","args_html":"(message, routing_key : String, mandatory = <span class=\"n\">false</span>, immediate = <span class=\"n\">false</span>, props = <span class=\"t\">Properties</span>.<span class=\"k\">new</span>)","location":{"filename":"src/amqp-client/exchange.cr","line_number":24,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/exchange.cr#L24"},"def":{"name":"publish_confirm","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"mandatory","doc":null,"default_value":"false","external_name":"mandatory","restriction":""},{"name":"immediate","doc":null,"default_value":"false","external_name":"immediate","restriction":""},{"name":"props","doc":null,"default_value":"Properties.new","external_name":"props","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel.basic_publish_confirm(message, @name, routing_key, mandatory, immediate, props)"}},{"html_id":"unbind(exchange:String,routing_key:String,no_wait=false,args=Arguments.new)-instance-method","name":"unbind","doc":null,"summary":null,"abstract":false,"args":[{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"no_wait","doc":null,"default_value":"false","external_name":"no_wait","restriction":""},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""}],"args_string":"(exchange : String, routing_key : String, no_wait = false, args = Arguments.new)","args_html":"(exchange : String, routing_key : String, no_wait = <span class=\"n\">false</span>, args = <span class=\"t\">Arguments</span>.<span class=\"k\">new</span>)","location":{"filename":"src/amqp-client/exchange.cr","line_number":15,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/exchange.cr#L15"},"def":{"name":"unbind","args":[{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"no_wait","doc":null,"default_value":"false","external_name":"no_wait","restriction":""},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel.exchange_unbind(@name, exchange, routing_key, no_wait, args)\nself\n"}}],"macros":[],"types":[]},{"html_id":"amqp-client/AMQP/Client/Frame","path":"AMQP/Client/Frame.html","kind":"alias","full_name":"AMQP::Client::Frame","name":"Frame","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/amqp-client.cr","line_number":129,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client.cr#L129"}],"repository_name":"amqp-client","program":false,"enum":false,"alias":true,"aliased":"AMQ::Protocol::Frame","aliased_html":"AMQ::Protocol::Frame","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"amqp-client/AMQP/Client","kind":"class","full_name":"AMQP::Client","name":"Client"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"amqp-client/AMQP/Client/GetMessage","path":"AMQP/Client/GetMessage.html","kind":"struct","full_name":"AMQP::Client::GetMessage","name":"GetMessage","abstract":false,"superclass":{"html_id":"amqp-client/AMQP/Client/Message","kind":"struct","full_name":"AMQP::Client::Message","name":"Message"},"ancestors":[{"html_id":"amqp-client/AMQP/Client/Message","kind":"struct","full_name":"AMQP::Client::Message","name":"Message"},{"html_id":"amqp-client/AMQP/Client/BaseMessage","kind":"struct","full_name":"AMQP::Client::BaseMessage","name":"BaseMessage"},{"html_id":"amqp-client/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"amqp-client/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"amqp-client/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/amqp-client/message.cr","line_number":49,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/message.cr#L49"}],"repository_name":"amqp-client","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"amqp-client/AMQP/Client","kind":"class","full_name":"AMQP::Client","name":"Client"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"html_id":"new(channel:Channel,exchange:String,routing_key:String,delivery_tag:UInt64,properties:AMQ::Protocol::Properties,body_io:IO::Memory,redelivered:Bool,message_count:UInt32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"channel","doc":null,"default_value":"","external_name":"channel","restriction":"Channel"},{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"delivery_tag","doc":null,"default_value":"","external_name":"delivery_tag","restriction":"UInt64"},{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":"AMQ::Protocol::Properties"},{"name":"body_io","doc":null,"default_value":"","external_name":"body_io","restriction":"IO::Memory"},{"name":"redelivered","doc":null,"default_value":"","external_name":"redelivered","restriction":"Bool"},{"name":"message_count","doc":null,"default_value":"","external_name":"message_count","restriction":"UInt32"}],"args_string":"(channel : Channel, exchange : String, routing_key : String, delivery_tag : UInt64, properties : AMQ::Protocol::Properties, body_io : IO::Memory, redelivered : Bool, message_count : UInt32)","args_html":"(channel : <a href=\"../../AMQP/Client/Channel.html\">Channel</a>, exchange : String, routing_key : String, delivery_tag : UInt64, properties : AMQ::Protocol::Properties, body_io : IO::Memory, redelivered : Bool, message_count : UInt32)","location":{"filename":"src/amqp-client/message.cr","line_number":52,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/message.cr#L52"},"def":{"name":"new","args":[{"name":"channel","doc":null,"default_value":"","external_name":"channel","restriction":"Channel"},{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"delivery_tag","doc":null,"default_value":"","external_name":"delivery_tag","restriction":"UInt64"},{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":"AMQ::Protocol::Properties"},{"name":"body_io","doc":null,"default_value":"","external_name":"body_io","restriction":"IO::Memory"},{"name":"redelivered","doc":null,"default_value":"","external_name":"redelivered","restriction":"Bool"},{"name":"message_count","doc":null,"default_value":"","external_name":"message_count","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(channel, exchange, routing_key, delivery_tag, properties, body_io, redelivered, message_count)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"message_count:UInt32-instance-method","name":"message_count","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","args_html":" : UInt32","location":{"filename":"src/amqp-client/message.cr","line_number":50,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/message.cr#L50"},"def":{"name":"message_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@message_count"}}],"macros":[],"types":[]},{"html_id":"amqp-client/AMQP/Client/Message","path":"AMQP/Client/Message.html","kind":"struct","full_name":"AMQP::Client::Message","name":"Message","abstract":true,"superclass":{"html_id":"amqp-client/AMQP/Client/BaseMessage","kind":"struct","full_name":"AMQP::Client::BaseMessage","name":"BaseMessage"},"ancestors":[{"html_id":"amqp-client/AMQP/Client/BaseMessage","kind":"struct","full_name":"AMQP::Client::BaseMessage","name":"BaseMessage"},{"html_id":"amqp-client/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"amqp-client/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"amqp-client/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/amqp-client/message.cr","line_number":24,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/message.cr#L24"}],"repository_name":"amqp-client","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"amqp-client/AMQP/Client/DeliverMessage","kind":"struct","full_name":"AMQP::Client::DeliverMessage","name":"DeliverMessage"},{"html_id":"amqp-client/AMQP/Client/GetMessage","kind":"struct","full_name":"AMQP::Client::GetMessage","name":"GetMessage"}],"including_types":[],"namespace":{"html_id":"amqp-client/AMQP/Client","kind":"class","full_name":"AMQP::Client","name":"Client"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"html_id":"new(channel:Channel,exchange:String,routing_key:String,delivery_tag:UInt64,properties:AMQ::Protocol::Properties,body_io:IO::Memory,redelivered:Bool)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"channel","doc":null,"default_value":"","external_name":"channel","restriction":"Channel"},{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"delivery_tag","doc":null,"default_value":"","external_name":"delivery_tag","restriction":"UInt64"},{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":"AMQ::Protocol::Properties"},{"name":"body_io","doc":null,"default_value":"","external_name":"body_io","restriction":"IO::Memory"},{"name":"redelivered","doc":null,"default_value":"","external_name":"redelivered","restriction":"Bool"}],"args_string":"(channel : Channel, exchange : String, routing_key : String, delivery_tag : UInt64, properties : AMQ::Protocol::Properties, body_io : IO::Memory, redelivered : Bool)","args_html":"(channel : <a href=\"../../AMQP/Client/Channel.html\">Channel</a>, exchange : String, routing_key : String, delivery_tag : UInt64, properties : AMQ::Protocol::Properties, body_io : IO::Memory, redelivered : Bool)","location":{"filename":"src/amqp-client/message.cr","line_number":27,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/message.cr#L27"},"def":{"name":"new","args":[{"name":"channel","doc":null,"default_value":"","external_name":"channel","restriction":"Channel"},{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"delivery_tag","doc":null,"default_value":"","external_name":"delivery_tag","restriction":"UInt64"},{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":"AMQ::Protocol::Properties"},{"name":"body_io","doc":null,"default_value":"","external_name":"body_io","restriction":"IO::Memory"},{"name":"redelivered","doc":null,"default_value":"","external_name":"redelivered","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(channel, exchange, routing_key, delivery_tag, properties, body_io, redelivered)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"ack(multiple=false)-instance-method","name":"ack","doc":null,"summary":null,"abstract":false,"args":[{"name":"multiple","doc":null,"default_value":"false","external_name":"multiple","restriction":""}],"args_string":"(multiple = false)","args_html":"(multiple = <span class=\"n\">false</span>)","location":{"filename":"src/amqp-client/message.cr","line_number":33,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/message.cr#L33"},"def":{"name":"ack","args":[{"name":"multiple","doc":null,"default_value":"false","external_name":"multiple","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel.basic_ack(@delivery_tag, multiple: multiple)"}},{"html_id":"delivery_tag:UInt64-instance-method","name":"delivery_tag","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/amqp-client/message.cr","line_number":25,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/message.cr#L25"},"def":{"name":"delivery_tag","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@delivery_tag"}},{"html_id":"nack(multiple=false,requeue=false)-instance-method","name":"nack","doc":null,"summary":null,"abstract":false,"args":[{"name":"multiple","doc":null,"default_value":"false","external_name":"multiple","restriction":""},{"name":"requeue","doc":null,"default_value":"false","external_name":"requeue","restriction":""}],"args_string":"(multiple = false, requeue = false)","args_html":"(multiple = <span class=\"n\">false</span>, requeue = <span class=\"n\">false</span>)","location":{"filename":"src/amqp-client/message.cr","line_number":37,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/message.cr#L37"},"def":{"name":"nack","args":[{"name":"multiple","doc":null,"default_value":"false","external_name":"multiple","restriction":""},{"name":"requeue","doc":null,"default_value":"false","external_name":"requeue","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel.basic_nack(@delivery_tag, multiple: multiple, requeue: requeue)"}},{"html_id":"redelivered:Bool-instance-method","name":"redelivered","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/amqp-client/message.cr","line_number":25,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/message.cr#L25"},"def":{"name":"redelivered","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@redelivered"}},{"html_id":"reject(requeue=false)-instance-method","name":"reject","doc":null,"summary":null,"abstract":false,"args":[{"name":"requeue","doc":null,"default_value":"false","external_name":"requeue","restriction":""}],"args_string":"(requeue = false)","args_html":"(requeue = <span class=\"n\">false</span>)","location":{"filename":"src/amqp-client/message.cr","line_number":41,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/message.cr#L41"},"def":{"name":"reject","args":[{"name":"requeue","doc":null,"default_value":"false","external_name":"requeue","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel.basic_reject(@delivery_tag, requeue: requeue)"}}],"macros":[],"types":[]},{"html_id":"amqp-client/AMQP/Client/Properties","path":"AMQP/Client/Properties.html","kind":"alias","full_name":"AMQP::Client::Properties","name":"Properties","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/amqp-client.cr","line_number":131,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client.cr#L131"}],"repository_name":"amqp-client","program":false,"enum":false,"alias":true,"aliased":"AMQ::Protocol::Properties","aliased_html":"AMQ::Protocol::Properties","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"amqp-client/AMQP/Client","kind":"class","full_name":"AMQP::Client","name":"Client"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"amqp-client/AMQP/Client/Queue","path":"AMQP/Client/Queue.html","kind":"class","full_name":"AMQP::Client::Queue","name":"Queue","abstract":false,"superclass":{"html_id":"amqp-client/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"amqp-client/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"amqp-client/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/amqp-client/queue.cr","line_number":4,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/queue.cr#L4"}],"repository_name":"amqp-client","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"amqp-client/AMQP/Client","kind":"class","full_name":"AMQP::Client","name":"Client"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"html_id":"new(channel:Channel,name:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"channel","doc":null,"default_value":"","external_name":"channel","restriction":"Channel"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(channel : Channel, name : String)","args_html":"(channel : <a href=\"../../AMQP/Client/Channel.html\">Channel</a>, name : String)","location":{"filename":"src/amqp-client/queue.cr","line_number":7,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/queue.cr#L7"},"def":{"name":"new","args":[{"name":"channel","doc":null,"default_value":"","external_name":"channel","restriction":"Channel"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(channel, name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"bind(exchange:String,routing_key:String,no_wait=false,args=Arguments.new)-instance-method","name":"bind","doc":null,"summary":null,"abstract":false,"args":[{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"no_wait","doc":null,"default_value":"false","external_name":"no_wait","restriction":""},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""}],"args_string":"(exchange : String, routing_key : String, no_wait = false, args = Arguments.new)","args_html":"(exchange : String, routing_key : String, no_wait = <span class=\"n\">false</span>, args = <span class=\"t\">Arguments</span>.<span class=\"k\">new</span>)","location":{"filename":"src/amqp-client/queue.cr","line_number":10,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/queue.cr#L10"},"def":{"name":"bind","args":[{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"no_wait","doc":null,"default_value":"false","external_name":"no_wait","restriction":""},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel.queue_bind(@name, exchange, routing_key, no_wait, args)\nself\n"}},{"html_id":"consumer_count-instance-method","name":"consumer_count","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/amqp-client/queue.cr","line_number":61,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/queue.cr#L61"},"def":{"name":"consumer_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@channel.queue_declare(@name, passive: true))[:consumer_count]"}},{"html_id":"delete(if_unused=false,if_empty=false)-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[{"name":"if_unused","doc":null,"default_value":"false","external_name":"if_unused","restriction":""},{"name":"if_empty","doc":null,"default_value":"false","external_name":"if_empty","restriction":""}],"args_string":"(if_unused = false, if_empty = false)","args_html":"(if_unused = <span class=\"n\">false</span>, if_empty = <span class=\"n\">false</span>)","location":{"filename":"src/amqp-client/queue.cr","line_number":53,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/queue.cr#L53"},"def":{"name":"delete","args":[{"name":"if_unused","doc":null,"default_value":"false","external_name":"if_unused","restriction":""},{"name":"if_empty","doc":null,"default_value":"false","external_name":"if_empty","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel.queue_delete(@name, if_unused, if_empty)"}},{"html_id":"get(no_ack=true)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"no_ack","doc":null,"default_value":"true","external_name":"no_ack","restriction":""}],"args_string":"(no_ack = true)","args_html":"(no_ack = <span class=\"n\">true</span>)","location":{"filename":"src/amqp-client/queue.cr","line_number":36,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/queue.cr#L36"},"def":{"name":"get","args":[{"name":"no_ack","doc":null,"default_value":"true","external_name":"no_ack","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel.basic_get(@name, no_ack)"}},{"html_id":"message_count-instance-method","name":"message_count","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/amqp-client/queue.cr","line_number":57,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/queue.cr#L57"},"def":{"name":"message_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@channel.queue_declare(@name, passive: true))[:message_count]"}},{"html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/amqp-client/queue.cr","line_number":5,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/queue.cr#L5"},"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"html_id":"publish(io:IO,bytesize:Int,mandatory=false,immediate=false,props=Properties.new)-instance-method","name":"publish","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"bytesize","doc":null,"default_value":"","external_name":"bytesize","restriction":"Int"},{"name":"mandatory","doc":null,"default_value":"false","external_name":"mandatory","restriction":""},{"name":"immediate","doc":null,"default_value":"false","external_name":"immediate","restriction":""},{"name":"props","doc":null,"default_value":"Properties.new","external_name":"props","restriction":""}],"args_string":"(io : IO, bytesize : Int, mandatory = false, immediate = false, props = Properties.new)","args_html":"(io : IO, bytesize : Int, mandatory = <span class=\"n\">false</span>, immediate = <span class=\"n\">false</span>, props = <span class=\"t\">Properties</span>.<span class=\"k\">new</span>)","location":{"filename":"src/amqp-client/queue.cr","line_number":24,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/queue.cr#L24"},"def":{"name":"publish","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"bytesize","doc":null,"default_value":"","external_name":"bytesize","restriction":"Int"},{"name":"mandatory","doc":null,"default_value":"false","external_name":"mandatory","restriction":""},{"name":"immediate","doc":null,"default_value":"false","external_name":"immediate","restriction":""},{"name":"props","doc":null,"default_value":"Properties.new","external_name":"props","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel.basic_publish(io, bytesize, \"\", @name, mandatory, immediate, props)"}},{"html_id":"publish(message,mandatory=false,immediate=false,props=Properties.new)-instance-method","name":"publish","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"mandatory","doc":null,"default_value":"false","external_name":"mandatory","restriction":""},{"name":"immediate","doc":null,"default_value":"false","external_name":"immediate","restriction":""},{"name":"props","doc":null,"default_value":"Properties.new","external_name":"props","restriction":""}],"args_string":"(message, mandatory = false, immediate = false, props = Properties.new)","args_html":"(message, mandatory = <span class=\"n\">false</span>, immediate = <span class=\"n\">false</span>, props = <span class=\"t\">Properties</span>.<span class=\"k\">new</span>)","location":{"filename":"src/amqp-client/queue.cr","line_number":20,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/queue.cr#L20"},"def":{"name":"publish","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"mandatory","doc":null,"default_value":"false","external_name":"mandatory","restriction":""},{"name":"immediate","doc":null,"default_value":"false","external_name":"immediate","restriction":""},{"name":"props","doc":null,"default_value":"Properties.new","external_name":"props","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel.basic_publish(message, \"\", @name, mandatory, immediate, props)"}},{"html_id":"publish_confirm(io:IO,bytesize:Int,mandatory=false,immediate=false,props=Properties.new)-instance-method","name":"publish_confirm","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"bytesize","doc":null,"default_value":"","external_name":"bytesize","restriction":"Int"},{"name":"mandatory","doc":null,"default_value":"false","external_name":"mandatory","restriction":""},{"name":"immediate","doc":null,"default_value":"false","external_name":"immediate","restriction":""},{"name":"props","doc":null,"default_value":"Properties.new","external_name":"props","restriction":""}],"args_string":"(io : IO, bytesize : Int, mandatory = false, immediate = false, props = Properties.new)","args_html":"(io : IO, bytesize : Int, mandatory = <span class=\"n\">false</span>, immediate = <span class=\"n\">false</span>, props = <span class=\"t\">Properties</span>.<span class=\"k\">new</span>)","location":{"filename":"src/amqp-client/queue.cr","line_number":32,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/queue.cr#L32"},"def":{"name":"publish_confirm","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"bytesize","doc":null,"default_value":"","external_name":"bytesize","restriction":"Int"},{"name":"mandatory","doc":null,"default_value":"false","external_name":"mandatory","restriction":""},{"name":"immediate","doc":null,"default_value":"false","external_name":"immediate","restriction":""},{"name":"props","doc":null,"default_value":"Properties.new","external_name":"props","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel.basic_publish_confirm(io, bytesize, \"\", @name, mandatory, immediate, props)"}},{"html_id":"publish_confirm(message,mandatory=false,immediate=false,props=Properties.new)-instance-method","name":"publish_confirm","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"mandatory","doc":null,"default_value":"false","external_name":"mandatory","restriction":""},{"name":"immediate","doc":null,"default_value":"false","external_name":"immediate","restriction":""},{"name":"props","doc":null,"default_value":"Properties.new","external_name":"props","restriction":""}],"args_string":"(message, mandatory = false, immediate = false, props = Properties.new)","args_html":"(message, mandatory = <span class=\"n\">false</span>, immediate = <span class=\"n\">false</span>, props = <span class=\"t\">Properties</span>.<span class=\"k\">new</span>)","location":{"filename":"src/amqp-client/queue.cr","line_number":28,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/queue.cr#L28"},"def":{"name":"publish_confirm","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"mandatory","doc":null,"default_value":"false","external_name":"mandatory","restriction":""},{"name":"immediate","doc":null,"default_value":"false","external_name":"immediate","restriction":""},{"name":"props","doc":null,"default_value":"Properties.new","external_name":"props","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel.basic_publish_confirm(message, \"\", @name, mandatory, immediate, props)"}},{"html_id":"purge-instance-method","name":"purge","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/amqp-client/queue.cr","line_number":49,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/queue.cr#L49"},"def":{"name":"purge","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel.queue_purge(@name)"}},{"html_id":"subscribe(tag=\"\",no_ack=true,exclusive=false,block=false,args=Arguments.new,work_pool=1,&blk:DeliverMessage->Nil)-instance-method","name":"subscribe","doc":null,"summary":null,"abstract":false,"args":[{"name":"tag","doc":null,"default_value":"\"\"","external_name":"tag","restriction":""},{"name":"no_ack","doc":null,"default_value":"true","external_name":"no_ack","restriction":""},{"name":"exclusive","doc":null,"default_value":"false","external_name":"exclusive","restriction":""},{"name":"block","doc":null,"default_value":"false","external_name":"block","restriction":""},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""},{"name":"work_pool","doc":null,"default_value":"1","external_name":"work_pool","restriction":""}],"args_string":"(tag = \"\", no_ack = true, exclusive = false, block = false, args = Arguments.new, work_pool = 1, &blk : DeliverMessage -> Nil)","args_html":"(tag = <span class=\"s\">&quot;&quot;</span>, no_ack = <span class=\"n\">true</span>, exclusive = <span class=\"n\">false</span>, block = <span class=\"n\">false</span>, args = <span class=\"t\">Arguments</span>.<span class=\"k\">new</span>, work_pool = <span class=\"n\">1</span>, &blk : <a href=\"../../AMQP/Client/DeliverMessage.html\">DeliverMessage</a> -> Nil)","location":{"filename":"src/amqp-client/queue.cr","line_number":40,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/queue.cr#L40"},"def":{"name":"subscribe","args":[{"name":"tag","doc":null,"default_value":"\"\"","external_name":"tag","restriction":""},{"name":"no_ack","doc":null,"default_value":"true","external_name":"no_ack","restriction":""},{"name":"exclusive","doc":null,"default_value":"false","external_name":"exclusive","restriction":""},{"name":"block","doc":null,"default_value":"false","external_name":"block","restriction":""},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""},{"name":"work_pool","doc":null,"default_value":"1","external_name":"work_pool","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"blk","doc":null,"default_value":"","external_name":"blk","restriction":"(DeliverMessage -> Nil)"},"return_type":"","visibility":"Public","body":"@channel.basic_consume(@name, tag, no_ack, exclusive, block, args, work_pool, &blk)"}},{"html_id":"unbind(exchange:String,routing_key:String,args=Arguments.new)-instance-method","name":"unbind","doc":null,"summary":null,"abstract":false,"args":[{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""}],"args_string":"(exchange : String, routing_key : String, args = Arguments.new)","args_html":"(exchange : String, routing_key : String, args = <span class=\"t\">Arguments</span>.<span class=\"k\">new</span>)","location":{"filename":"src/amqp-client/queue.cr","line_number":15,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/queue.cr#L15"},"def":{"name":"unbind","args":[{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"args","doc":null,"default_value":"Arguments.new","external_name":"args","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel.queue_unbind(@name, exchange, routing_key, args)\nself\n"}},{"html_id":"unsubscribe(consumer_tag)-instance-method","name":"unsubscribe","doc":null,"summary":null,"abstract":false,"args":[{"name":"consumer_tag","doc":null,"default_value":"","external_name":"consumer_tag","restriction":""}],"args_string":"(consumer_tag)","args_html":"(consumer_tag)","location":{"filename":"src/amqp-client/queue.cr","line_number":45,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/queue.cr#L45"},"def":{"name":"unsubscribe","args":[{"name":"consumer_tag","doc":null,"default_value":"","external_name":"consumer_tag","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@channel.basic_cancel(consumer_tag)"}}],"macros":[],"types":[]},{"html_id":"amqp-client/AMQP/Client/ReturnedMessage","path":"AMQP/Client/ReturnedMessage.html","kind":"struct","full_name":"AMQP::Client::ReturnedMessage","name":"ReturnedMessage","abstract":false,"superclass":{"html_id":"amqp-client/AMQP/Client/BaseMessage","kind":"struct","full_name":"AMQP::Client::BaseMessage","name":"BaseMessage"},"ancestors":[{"html_id":"amqp-client/AMQP/Client/BaseMessage","kind":"struct","full_name":"AMQP::Client::BaseMessage","name":"BaseMessage"},{"html_id":"amqp-client/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"amqp-client/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"amqp-client/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/amqp-client/message.cr","line_number":14,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/message.cr#L14"}],"repository_name":"amqp-client","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"amqp-client/AMQP/Client","kind":"class","full_name":"AMQP::Client","name":"Client"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"html_id":"new(reply_code:UInt16,reply_text:String,exchange:String,routing_key:String,properties:AMQ::Protocol::Properties,body_io:IO::Memory)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"reply_code","doc":null,"default_value":"","external_name":"reply_code","restriction":"UInt16"},{"name":"reply_text","doc":null,"default_value":"","external_name":"reply_text","restriction":"String"},{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":"AMQ::Protocol::Properties"},{"name":"body_io","doc":null,"default_value":"","external_name":"body_io","restriction":"IO::Memory"}],"args_string":"(reply_code : UInt16, reply_text : String, exchange : String, routing_key : String, properties : AMQ::Protocol::Properties, body_io : IO::Memory)","args_html":"(reply_code : UInt16, reply_text : String, exchange : String, routing_key : String, properties : AMQ::Protocol::Properties, body_io : IO::Memory)","location":{"filename":"src/amqp-client/message.cr","line_number":17,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/message.cr#L17"},"def":{"name":"new","args":[{"name":"reply_code","doc":null,"default_value":"","external_name":"reply_code","restriction":"UInt16"},{"name":"reply_text","doc":null,"default_value":"","external_name":"reply_text","restriction":"String"},{"name":"exchange","doc":null,"default_value":"","external_name":"exchange","restriction":"String"},{"name":"routing_key","doc":null,"default_value":"","external_name":"routing_key","restriction":"String"},{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":"AMQ::Protocol::Properties"},{"name":"body_io","doc":null,"default_value":"","external_name":"body_io","restriction":"IO::Memory"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(reply_code, reply_text, exchange, routing_key, properties, body_io)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"reply_code:UInt16-instance-method","name":"reply_code","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt16","args_html":" : UInt16","location":{"filename":"src/amqp-client/message.cr","line_number":15,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/message.cr#L15"},"def":{"name":"reply_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@reply_code"}},{"html_id":"reply_text:String-instance-method","name":"reply_text","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/amqp-client/message.cr","line_number":15,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/message.cr#L15"},"def":{"name":"reply_text","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@reply_text"}}],"macros":[],"types":[]},{"html_id":"amqp-client/AMQP/Client/Sync","path":"AMQP/Client/Sync.html","kind":"struct","full_name":"AMQP::Client::Sync(T)","name":"Sync","abstract":false,"superclass":{"html_id":"amqp-client/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"amqp-client/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"amqp-client/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"amqp-client/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/amqp-client/sync.cr","line_number":2,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/sync.cr#L2"}],"repository_name":"amqp-client","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"amqp-client/AMQP/Client","kind":"class","full_name":"AMQP::Client","name":"Client"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"html_id":"new(obj:T=T.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"obj","doc":null,"default_value":"T.new","external_name":"obj","restriction":"T"}],"args_string":"(obj : T = T.new)","args_html":"(obj : T = <span class=\"t\">T</span>.<span class=\"k\">new</span>)","location":{"filename":"src/amqp-client/sync.cr","line_number":6,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/sync.cr#L6"},"def":{"name":"new","args":[{"name":"obj","doc":null,"default_value":"T.new","external_name":"obj","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Sync(T).allocate\n_.initialize(obj)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[{"html_id":"method_missing(call)-macro","name":"method_missing","doc":null,"summary":null,"abstract":false,"args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"args_string":"(call)","args_html":"(call)","location":{"filename":"src/amqp-client/sync.cr","line_number":9,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/sync.cr#L9"},"def":{"name":"method_missing","args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      @mutex.synchronize do\n        @obj.\n{{ call }}\n\n      \nend\n    \n"}}],"types":[]},{"html_id":"amqp-client/AMQP/Client/UnexpectedFrame","path":"AMQP/Client/UnexpectedFrame.html","kind":"class","full_name":"AMQP::Client::UnexpectedFrame","name":"UnexpectedFrame","abstract":false,"superclass":{"html_id":"amqp-client/AMQP/Client/Error","kind":"class","full_name":"AMQP::Client::Error","name":"Error"},"ancestors":[{"html_id":"amqp-client/AMQP/Client/Error","kind":"class","full_name":"AMQP::Client::Error","name":"Error"},{"html_id":"amqp-client/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"amqp-client/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"amqp-client/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/amqp-client/errors.cr","line_number":5,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/errors.cr#L5"}],"repository_name":"amqp-client","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"amqp-client/AMQP/Client","kind":"class","full_name":"AMQP::Client","name":"Client"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"html_id":"new(frame:Frame)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"frame","doc":null,"default_value":"","external_name":"frame","restriction":"Frame"}],"args_string":"(frame : Frame)","args_html":"(frame : <a href=\"../../AMQP/Client/Frame.html\">Frame</a>)","location":{"filename":"src/amqp-client/errors.cr","line_number":10,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/errors.cr#L10"},"def":{"name":"new","args":[{"name":"frame","doc":null,"default_value":"","external_name":"frame","restriction":"Frame"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(frame)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/amqp-client/errors.cr","line_number":6,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/errors.cr#L6"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"amqp-client/AMQP/Client/WebSocketIO","path":"AMQP/Client/WebSocketIO.html","kind":"class","full_name":"AMQP::Client::WebSocketIO","name":"WebSocketIO","abstract":false,"superclass":{"html_id":"amqp-client/IO","kind":"class","full_name":"IO","name":"IO"},"ancestors":[{"html_id":"amqp-client/IO/Buffered","kind":"module","full_name":"IO::Buffered","name":"Buffered"},{"html_id":"amqp-client/IO","kind":"class","full_name":"IO","name":"IO"},{"html_id":"amqp-client/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"amqp-client/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/amqp-client/websocket_io.cr","line_number":4,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/websocket_io.cr#L4"}],"repository_name":"amqp-client","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"amqp-client/IO/Buffered","kind":"module","full_name":"IO::Buffered","name":"Buffered"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"amqp-client/AMQP/Client","kind":"class","full_name":"AMQP::Client","name":"Client"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"html_id":"new(ws:HTTP::WebSocket)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ws","doc":null,"default_value":"","external_name":"ws","restriction":"::HTTP::WebSocket"}],"args_string":"(ws : HTTP::WebSocket)","args_html":"(ws : HTTP::WebSocket)","location":{"filename":"src/amqp-client/websocket_io.cr","line_number":7,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/websocket_io.cr#L7"},"def":{"name":"new","args":[{"name":"ws","doc":null,"default_value":"","external_name":"ws","restriction":"::HTTP::WebSocket"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ws)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"read_timeout=(timeout)-instance-method","name":"read_timeout=","doc":null,"summary":null,"abstract":false,"args":[{"name":"timeout","doc":null,"default_value":"","external_name":"timeout","restriction":""}],"args_string":"(timeout)","args_html":"(timeout)","location":{"filename":"src/amqp-client/websocket_io.cr","line_number":29,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/websocket_io.cr#L29"},"def":{"name":"read_timeout=","args":[{"name":"timeout","doc":null,"default_value":"","external_name":"timeout","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@r.read_timeout = timeout"}},{"html_id":"unbuffered_close:Nil-instance-method","name":"unbuffered_close","doc":"Closes the wrapped `IO`.","summary":"<p>Closes the wrapped <code>IO</code>.</p>","abstract":false,"args":[],"args_string":" : Nil","args_html":" : Nil","location":{"filename":"src/amqp-client/websocket_io.cr","line_number":39,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/websocket_io.cr#L39"},"def":{"name":"unbuffered_close","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if @closed\n  return\nend\n@closed = true\n@r.close\n@w.close\n@ws.close\n"}},{"html_id":"unbuffered_flush-instance-method","name":"unbuffered_flush","doc":"Flushes the wrapped `IO`.","summary":"<p>Flushes the wrapped <code>IO</code>.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/amqp-client/websocket_io.cr","line_number":36,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/websocket_io.cr#L36"},"def":{"name":"unbuffered_flush","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"html_id":"unbuffered_read(bytes:Bytes)-instance-method","name":"unbuffered_read","doc":"Reads at most *slice.size* bytes from the wrapped `IO` into *slice*.\nReturns the number of bytes read.","summary":"<p>Reads at most <em>slice.size</em> bytes from the wrapped <code>IO</code> into <em>slice</em>.</p>","abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes)","args_html":"(bytes : Bytes)","location":{"filename":"src/amqp-client/websocket_io.cr","line_number":21,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/websocket_io.cr#L21"},"def":{"name":"unbuffered_read","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@r.read(bytes)"}},{"html_id":"unbuffered_rewind-instance-method","name":"unbuffered_rewind","doc":"Rewinds the wrapped `IO`.","summary":"<p>Rewinds the wrapped <code>IO</code>.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/amqp-client/websocket_io.cr","line_number":33,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/websocket_io.cr#L33"},"def":{"name":"unbuffered_rewind","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"html_id":"unbuffered_write(bytes:Bytes):Nil-instance-method","name":"unbuffered_write","doc":"Writes at most *slice.size* bytes from *slice* into the wrapped `IO`.\nReturns the number of bytes written.","summary":"<p>Writes at most <em>slice.size</em> bytes from <em>slice</em> into the wrapped <code>IO</code>.</p>","abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : Nil","args_html":"(bytes : Bytes) : Nil","location":{"filename":"src/amqp-client/websocket_io.cr","line_number":25,"url":"https://github.com/cloudamqp/amqp-client.cr/blob/0f3762af58504a554413635775c5836553060a50/src/amqp-client/websocket_io.cr#L25"},"def":{"name":"unbuffered_write","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@ws.send(bytes)"}}],"macros":[],"types":[]}]}]}]}})